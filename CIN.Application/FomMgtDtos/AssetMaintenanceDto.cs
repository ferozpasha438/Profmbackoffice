using AutoMapper;
using CIN.Domain;
using CIN.Domain.FomMgt;
using CIN.Domain.FomMgt.AssetMaintenanceMgt;
using CIN.Domain.OpeartionsMgt;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Security.Principal;
using System.Text;
using System.Threading.Tasks;

namespace CIN.Application.FomMgtDtos
{
    [AutoMap(typeof(TblErpFomSection))]
    public class TblErpFomSectionDto : AutoGeneratedIdKeyAuditableCreatedEntityDto<int>
    {
        [StringLength(20)]
        public string SectionCode { get; set; }
        [StringLength(200)]
        public string Name { get; set; }
        [StringLength(200)]
        public string NameAr { get; set; }
        [StringLength(250)]
        public string Description { get; set; }
        public bool ForAssetMgt { get; set; }
    }
    [AutoMap(typeof(TblErpFomAssetMaster))]
    public class TblErpFomAssetMasterDto : AutoGeneratedIdKeyAuditableCreatedEntityDto<int>
    {
        [StringLength(20)]
        [Key]
        public string AssetCode { get; set; }
        [StringLength(200)]
        public string Name { get; set; }
        [StringLength(200)]
        public string NameAr { get; set; }
        [StringLength(500)]
        public string Description { get; set; }
        [StringLength(150)]
        public string Location { get; set; }
        [StringLength(100)]
        public string Classification { get; set; }
        [StringLength(100)]
        public string RouteGroup { get; set; }
        [StringLength(100)]
        public string JobPlan { get; set; }
        public bool HasChild { get; set; } = false;

        [ForeignKey(nameof(SectionCode))]
        public TblErpFomSection Section { get; set; }
        [StringLength(20)]
        public string SectionCode { get; set; }


        [ForeignKey(nameof(DeptCode))]
        public TblErpFomDepartment Department { get; set; }
        [StringLength(20)]
        public string DeptCode { get; set; }


        [ForeignKey(nameof(ContractCode))]
        public TblErpFomCustomerContract CustomerContract { get; set; }
        [StringLength(20)]
        public string ContractCode { get; set; }

        public DateTime? InstallDate { get; set; }
        public DateTime? ReplacementDate { get; set; }
        public bool? IsWrittenOff { get; set; }
        public int? AssetScale { get; set; }
        public List<TblErpFomAssetMasterChildDto> AssetChilds { get; set; }
        public List<TblErpFomAssetMasterTaskDto> AssetTasks { get; set; }


    }


    [AutoMap(typeof(TblErpFomAssetMasterChild))]
    public class TblErpFomAssetMasterChildDto : AutoGenerateIdKeyDto<int>
    {
        [StringLength(20)]
        public string ChildCode { get; set; }
        [StringLength(200)]
        public string Name { get; set; }

        [StringLength(20)]
        public string AssetCode { get; set; }
    }
    [AutoMap(typeof(TblErpFomAssetMasterTask))]
    public class TblErpFomAssetMasterTaskDto : PrimaryKeyDto<int>
    {
        [StringLength(20)]
        public string AssetCode { get; set; }

        [StringLength(20)]
        public string ActCode { get; set; }

        //[StringLength(50)]
        public string ResTypeCode { get; set; }
    }

    [AutoMap(typeof(TblErpFomJobPlanMaster))]
    public class TblErpFomJobPlanMasterDto : AutoGeneratedIdKeyAuditableCreatedEntityDto<int>
    {
        [StringLength(20)]

        public string JobPlanCode { get; set; }

        public DateTime JobPlanDate { get; set; }

        [StringLength(20)]
        public string ContractCode { get; set; }
        public string Customer { get; set; }
        public string Location { get; set; }


        [StringLength(20)]
        public string AssetCode { get; set; }

        public DateTime ContStartDate { get; set; }
        public DateTime ContEndDate { get; set; }
        [StringLength(20)]
        public string Frequency { get; set; }

        [StringLength(200)]
        public string PreFixCode { get; set; }

        [StringLength(20)]
        public string DeptCode { get; set; }


        [StringLength(20)]
        public string SectionCode { get; set; }


        [StringLength(200)]
        public string PreparedBy { get; set; }
        [StringLength(200)]
        public string ApprovedBy { get; set; }
        public DateTime PlanStartDate { get; set; }

        [StringLength(500)]
        public string Remarks { get; set; }

        public bool NoJobPlanKpi { get; set; } //Job Plan for Asset is not included KPI
        public bool CanGenChildSch { get; set; } //Generate Schedule for Child Items as well, for true Child Schedules are available
        public bool ChildHasDiffFreq { get; set; } //Child Item have Different Frequency for PPM
        public bool Approve { get; set; }
        public bool IsClosed { get; set; }
        public bool IsVoid { get; set; }

        public List<TblErpFomJobPlanMasterDateScheduleDto> JobPlanSchedules { get; set; }
    }

    public class GetFomAssetMasterByAssetCodeDto
    {
        [StringLength(20)]
        public string ContractCode { get; set; }
        [StringLength(20)]
        public string DeptCode { get; set; }
        [StringLength(20)]
        public string SectionCode { get; set; }
        public DateTime ContStartDate { get; set; }
        public DateTime ContEndDate { get; set; }
    }

    public class CalculateDatesForFrequencySelectedDto
    {
        public string Frequency { get; set; }
        public string Remarks { get; set; }
        public DateTime PlanStartDate { get; set; }
        public string ChildCode { get; set; }
        public int Seq { get; set; }
        public int Id { get; set; }

    }

    public class TblErpFomJobPlanMasterDateScheduleDto
    {
        public long Id { get; set; }
        [StringLength(20)]
        public string AssetCode { get; set; }

        [StringLength(20)]
        public string ChildCode { get; set; }
        public string Frequency { get; set; }
        public DateTime Date { get; set; }
        public string Remarks { get; set; }
        public bool IsClosed { get; set; }
    }
    public class TblErpFomJobPlanMasterApprovalDto
    {
        public string Type { get; set; }
        public bool Approve { get; set; }
        public int Id { get; set; }

    }

    [AutoMap(typeof(TblErpFomJobPlanMessageLog))]
    public class TblErpFomJobPlanMessageLogDto : PrimaryKeyDto<int>
    {
        [StringLength(20)]
        public string JobPlanCode { get; set; }

        [StringLength(500)]
        public string Message { get; set; }
        public DateTime MessageDate { get; set; }
    }

    public class GetAssetjoborderchilditemsByJobDto
    {
        public string ChildCode { get; set; }
        public List<TblErpFomJobPlanMasterDateScheduleDto> ChildItems { get; set; }
    }


    [AutoMap(typeof(TblErpFomJobPlanScheduleClosure))]
    public class TblErpFomJobPlanScheduleClosureDto : PrimaryKeyDto<long>
    {
        public long ChildScheduleId { get; set; }

        [StringLength(20)]
        public string JobPlanCode { get; set; }

        [StringLength(20)]
        public string AssetCode { get; set; }
        [StringLength(20)]
        public string ChildCode { get; set; }
        [StringLength(20)]
        public string Frequency { get; set; }
        public DateTime PlanStartDate { get; set; }

        [StringLength(500)]
        public string Remarks { get; set; }
        public DateTime ClosingDate { get; set; }

        [StringLength(250)]
        public string ClosedBy { get; set; }

        public List<TblErpFomJobPlanScheduleClosureItemDto> Materials { get; set; }
        public List<TblErpFomJobPlanScheduleClosureItemDto> Tools { get; set; }
        public List<TblErpFomJobPlanScheduleClosureItemDto> LaborHours { get; set; }
    }

    [AutoMap(typeof(TblErpFomJobPlanScheduleClosureItem))]
    public class TblErpFomJobPlanScheduleClosureItemDto : PrimaryKeyDto<long>
    {
        public long ScheduleClosureId { get; set; }

        [StringLength(500)]
        public string Description { get; set; }
        [StringLength(100)]
        public string Quantity { get; set; }
        public int? Hours { get; set; }
        [StringLength(20)]
        public string Source { get; set; }
        public DateTime CreatedDate { get; set; }
    }
}
