// <auto-generated />
using System;
using CIN.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CIN.DB.One.Migrations
{
    [DbContext(typeof(CINDBOneContext))]
    [Migration("20240226091248_tbl_customerContract_upd")]
    partial class tbl_customerContract_upd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefAccountBranchMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CashPurchase")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CostCorrection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CostofSalesAccount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DefaultPayable")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DefaultSalesAccount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DefaultSalesReturn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FinBranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FinBranchName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InventoryAccount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InventoryAdjustment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InventoryTransfer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Reserved")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WIPUsageConsumption")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("FinBranchCode");

                    b.ToTable("tblFinDefAccountBranchMapping");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefAccountBranches", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("FinBranchAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FinBranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FinBranchDesc")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("FinBranchIsActive")
                        .HasColumnType("bit");

                    b.Property<string>("FinBranchName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FinBranchPrefix")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FinBranchType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("FinBranchCode");

                    b.ToTable("tblFinDefAccountBranches");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefAccountCategory", b =>
                {
                    b.Property<string>("FinCatCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<short>("FinCatLastSeq")
                        .HasColumnType("smallint");

                    b.Property<string>("FinCatName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FinType")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.HasKey("FinCatCode");

                    b.HasIndex("FinType");

                    b.HasIndex(new[] { "FinCatCode" }, "IX_tblFinDefAccountCategory_FinCatCode")
                        .IsUnique();

                    b.ToTable("tblFinDefAccountCategory");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefAccountSubCategory", b =>
                {
                    b.Property<string>("FinSubCatCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("FinCatCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<short>("FinSubCatLastSeq")
                        .HasColumnType("smallint");

                    b.Property<string>("FinSubCatName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.HasKey("FinSubCatCode");

                    b.HasIndex("FinCatCode");

                    b.ToTable("tblFinDefAccountSubCategory");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefAccountlPaycodes", b =>
                {
                    b.Property<string>("FinPayCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("FinBranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FinPayAcIntgrAC")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FinPayName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FinPayPDCClearAC")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FinPayType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<bool>("SystemGenCheckBook")
                        .HasColumnType("bit");

                    b.Property<bool>("UseByOtherBranches")
                        .HasColumnType("bit");

                    b.HasKey("FinPayCode");

                    b.HasIndex("FinBranchCode");

                    b.HasIndex("FinPayAcIntgrAC");

                    b.HasIndex("FinPayPDCClearAC");

                    b.ToTable("tblFinDefAccountlPaycodes");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefBankCheckLeaves", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BounceReason")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CheckDate")
                        .HasColumnType("date");

                    b.Property<string>("CheckLeavePrefix")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("ClearedOn")
                        .HasColumnType("date");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("EndChkNum")
                        .HasColumnType("int");

                    b.Property<string>("FinPayCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsBounced")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCleared")
                        .HasColumnType("bit");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPDC")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVoided")
                        .HasColumnType("bit");

                    b.Property<string>("IssuedToName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("StChkNum")
                        .HasColumnType("int");

                    b.Property<string>("TranSource")
                        .HasMaxLength(2)
                        .HasColumnType("char(2)");

                    b.Property<string>("UsedByTranNum")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("UsedOn")
                        .HasColumnType("date");

                    b.Property<string>("VoidedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("VoidedOn")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("FinPayCode");

                    b.ToTable("tblFinDefBankCheckLeaves");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefBranchesAuthority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AppAuth")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("AppAuthAP")
                        .HasColumnType("bit");

                    b.Property<bool>("AppAuthAR")
                        .HasColumnType("bit");

                    b.Property<bool>("AppAuthAdj")
                        .HasColumnType("bit");

                    b.Property<bool>("AppAuthBR")
                        .HasColumnType("bit");

                    b.Property<bool>("AppAuthBV")
                        .HasColumnType("bit");

                    b.Property<bool>("AppAuthCV")
                        .HasColumnType("bit");

                    b.Property<bool>("AppAuthFA")
                        .HasColumnType("bit");

                    b.Property<bool>("AppAuthIssue")
                        .HasColumnType("bit");

                    b.Property<bool>("AppAuthJV")
                        .HasColumnType("bit");

                    b.Property<bool>("AppAuthPurcOrder")
                        .HasColumnType("bit");

                    b.Property<bool>("AppAuthPurcRequest")
                        .HasColumnType("bit");

                    b.Property<bool>("AppAuthPurcReturn")
                        .HasColumnType("bit");

                    b.Property<bool>("AppAuthRect")
                        .HasColumnType("bit");

                    b.Property<bool>("AppAuthTrans")
                        .HasColumnType("bit");

                    b.Property<short>("AppLevel")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("FinBranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsFinalAuthority")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("FinBranchCode");

                    b.ToTable("tblFinDefBranchesAuthority");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefBranchesMainAccounts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("FinAcCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FinBranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("FinAcCode");

                    b.HasIndex("FinBranchCode");

                    b.ToTable("tblFinDefBranchesMainAccounts");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefCenters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FinCenterCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FinCenterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FinCenterType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("FinCenterCode");

                    b.ToTable("tblFinDefCenters");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", b =>
                {
                    b.Property<string>("FinAcCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("FinAcAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FinAcDesc")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FinAcName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<short>("FinActLastSeq")
                        .HasColumnType("smallint");

                    b.Property<string>("FinCatCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("FinIsIntegrationAC")
                        .HasColumnType("bit");

                    b.Property<bool>("FinIsPayCode")
                        .HasColumnType("bit");

                    b.Property<bool>("FinIsRevenue")
                        .HasColumnType("bit");

                    b.Property<string>("FinIsRevenuetype")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("FinPayCodetype")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("FinSubCatCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Fintype")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.HasKey("FinAcCode");

                    b.HasIndex(new[] { "FinAcCode" }, "IX_tblFinDefMainAccounts_FinAcCode")
                        .IsUnique();

                    b.ToTable("tblFinDefMainAccounts");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinSysAccountType", b =>
                {
                    b.Property<string>("TypeCode")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("TypeBal")
                        .HasMaxLength(2)
                        .HasColumnType("nchar(2)");

                    b.HasKey("TypeCode");

                    b.ToTable("tblFinSysAccountType");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinSysBatchSetup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BatchCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BatchName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("BatchName2")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("tblFinSysBatchSetup");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinSysCostAllocationSetup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CostCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CostName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CostName2")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CostType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("tblFinSysCostAllocationSetup");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinSysFinanialSetup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool?>("ArDistFlag")
                        .HasColumnType("bit");

                    b.Property<bool>("FInSysGenAcCode")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FYClosingDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("FYOpenDate")
                        .HasColumnType("date");

                    b.Property<short>("FYYear")
                        .HasColumnType("smallint");

                    b.Property<short>("FinAcCatLen")
                        .HasColumnType("smallint");

                    b.Property<string>("FinAcFormat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("FinAcLen")
                        .HasColumnType("smallint");

                    b.Property<short>("FinAcSubCatLen")
                        .HasColumnType("smallint");

                    b.Property<bool>("FinAllowNextYearTran")
                        .HasColumnType("bit");

                    b.Property<short>("FinBranchPrefixLen")
                        .HasColumnType("smallint");

                    b.Property<bool>("FinTranDateAsPostDate")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MaxCutOffOverAmr")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("MinCutOffShortAmt")
                        .HasColumnType("decimal(18,3)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<short>("NumOfSeg")
                        .HasColumnType("smallint");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<bool>("UserCostSeg")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("tblFinSysFinanialSetup");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinSysSegmentSetup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Seg2Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Seg2Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Seg2Name2")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("tblFinSysSegmentSetup");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinSysSegmentTwoSetup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Seg2Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Seg2Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Seg2Name2")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("tblFinSysSegmentTwoSetup");
                });

            modelBuilder.Entity("CIN.Domain.FleetMgt.TblAssignDrivers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("AssignDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("NotesForDriver")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblAssignDrivers");
                });

            modelBuilder.Entity("CIN.Domain.FleetMgt.TblAssignRoutes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoutePlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblAssignRoutes");
                });

            modelBuilder.Entity("CIN.Domain.FleetMgt.TblDriverMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverName_Ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IqamaNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LicenseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Validity")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("tblDriverMaster");
                });

            modelBuilder.Entity("CIN.Domain.FleetMgt.TblRouteMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RouteCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteLatitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteLongitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteNameAr")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblRouteMaster");
                });

            modelBuilder.Entity("CIN.Domain.FleetMgt.TblRoutePlanDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Flag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RouteCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoutePlanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tblRoutePlanDetails");
                });

            modelBuilder.Entity("CIN.Domain.FleetMgt.TblRoutePlanHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RouteNameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteNameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoutePlanCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblRoutePlanHeader");
                });

            modelBuilder.Entity("CIN.Domain.FleetMgt.TblServiceCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceName_Ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceName_En")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblServiceCode");
                });

            modelBuilder.Entity("CIN.Domain.FleetMgt.TblServiceProvider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LocationCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceProviderCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceProviderName_Ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceProviderName_En")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblServiceProvider");
                });

            modelBuilder.Entity("CIN.Domain.FleetMgt.TblVehicleBrandMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("VehicleCompany")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblVehicleBrandMaster");
                });

            modelBuilder.Entity("CIN.Domain.FleetMgt.TblVehicleCompanyMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("VehicleCompany")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleCompany_Ar")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblVehicleCompanyMaster");
                });

            modelBuilder.Entity("CIN.Domain.FleetMgt.TblVehicleFuelEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Driver")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FuelQuantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FuelType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FuellingDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ReadingKM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblVehicleFuelEntry");
                });

            modelBuilder.Entity("CIN.Domain.FleetMgt.TblVehicleMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AnnualLeaseValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChassisNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentBookValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentMeterReading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedMileagePerKM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedServiceYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FuelTankCapacityInLitters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FuelType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVehicleGoodsCarrier")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LeaseEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MeterReadingOnProcurement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProcurementLeasedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegisteredRTORegion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationAuthority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalvageBookValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeatingCapacity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VehicleLastMaintenanceDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VehicleNextMaintenanceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VehicleOwnerArabic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleOwnerEnglish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleOwnership")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleValidityTill")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblVehicleMaster");
                });

            modelBuilder.Entity("CIN.Domain.FleetMgt.TblVehicleTypeMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleType_Ar")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblVehicleTypeMaster");
                });

            modelBuilder.Entity("CIN.Domain.FomMgt.TblErpFomActivities", b =>
                {
                    b.Property<string>("ActCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ActName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActNameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("DeptCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsB2B")
                        .HasColumnType("bit");

                    b.Property<bool>("IsB2C")
                        .HasColumnType("bit");

                    b.HasKey("ActCode");

                    b.HasIndex("DeptCode");

                    b.ToTable("tblErpFomActivities");
                });

            modelBuilder.Entity("CIN.Domain.FomMgt.TblErpFomClientCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClientCatCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("NameArabic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEng")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblErpFomClientCategory");
                });

            modelBuilder.Entity("CIN.Domain.FomMgt.TblErpFomClientMaster", b =>
                {
                    b.Property<string>("ClientCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AlternameMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlternateEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CRNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientName_Ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Designation1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("GeoLocGain")
                        .HasColumnType("real");

                    b.Property<float>("GeoLocLan")
                        .HasColumnType("real");

                    b.Property<float>("GeoLocLat")
                        .HasColumnType("real");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("InActiveDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LandLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoginPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumOfEmp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisteredEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisteredMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondaryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfBusiness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VATNum")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientCode");

                    b.ToTable("tblErpFomClientMaster");
                });

            modelBuilder.Entity("CIN.Domain.FomMgt.TblErpFomCustomerContract", b =>
                {
                    b.Property<string>("ContractCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ContApprAuthorities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContDeptCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ContEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ContProjManager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContProjSupervisor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ContStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustContNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustSiteCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAppreoved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSheduleRequired")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContractCode");

                    b.ToTable("tblErpFomCustomerContract");
                });

            modelBuilder.Entity("CIN.Domain.FomMgt.TblErpFomDepartment", b =>
                {
                    b.Property<string>("DeptCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeptServType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSheduleRequired1")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSheduleRequired2")
                        .HasColumnType("bit");

                    b.Property<string>("NameArabic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEng")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeptCode");

                    b.ToTable("tblErpFomDepartment");
                });

            modelBuilder.Entity("CIN.Domain.FomMgt.TblErpFomDepartmentTypes", b =>
                {
                    b.Property<string>("ServiceTypeCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ServiceTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceTypeName_Ar")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ServiceTypeCode");

                    b.ToTable("tblErpFomDepartmentTypes");
                });

            modelBuilder.Entity("CIN.Domain.FomMgt.TblErpFomResourceType", b =>
                {
                    b.Property<string>("ResTypeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("ResTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResTypeNameAr")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ResTypeCode");

                    b.ToTable("tblErpFomResourceType");
                });

            modelBuilder.Entity("CIN.Domain.FomMgt.TblErpFomResources", b =>
                {
                    b.Property<string>("ResCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("ApprovalAuth")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("DeptCodes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResTypeCode")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ResCode");

                    b.HasIndex("ResTypeCode");

                    b.ToTable("tblErpFomResources");
                });

            modelBuilder.Entity("CIN.Domain.FomMgt.TblErpFomSubContractor", b =>
                {
                    b.Property<string>("SubContCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson1Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson2Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeptCodes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DesgContactPerson1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DesgContactPerson2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameArabic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubContCode");

                    b.ToTable("tblErpFomSubContractor");
                });

            modelBuilder.Entity("CIN.Domain.FomMgt.TblErpFomSysLoginAuthority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("ApproveTicket")
                        .HasColumnType("bit");

                    b.Property<bool>("CloseWO")
                        .HasColumnType("bit");

                    b.Property<bool>("ForeCloseWO")
                        .HasColumnType("bit");

                    b.Property<int>("LoginID")
                        .HasColumnType("int");

                    b.Property<bool>("ManageWO")
                        .HasColumnType("bit");

                    b.Property<bool>("ModifyTicket")
                        .HasColumnType("bit");

                    b.Property<bool>("ModifyWO")
                        .HasColumnType("bit");

                    b.Property<bool>("RaiseTicket")
                        .HasColumnType("bit");

                    b.Property<bool>("VoidAfterApproval")
                        .HasColumnType("bit");

                    b.Property<bool>("VoidTicket")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("tblErpFomSysLoginAuthority");
                });

            modelBuilder.Entity("CIN.Domain.FomMgt.TblErpFomUserClientLoginMapping", b =>
                {
                    b.Property<string>("UserClientLoginCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastLoginDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoginType")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Password")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("RegEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("RegMobile")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("UserClientLoginCode");

                    b.ToTable("tblErpFomUserClientLoginMapping");
                });

            modelBuilder.Entity("CIN.Domain.GeneralLedger.BankVoucher.TblFinTrnBankVoucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("AccountPayee")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BankCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Batch")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ChequeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ChequeNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("DocNum")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("JvDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Narration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PDC")
                        .HasColumnType("bit");

                    b.Property<bool>("Posted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Source")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SpVoucherNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrnMode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Void")
                        .HasColumnType("bit");

                    b.Property<string>("VoucherNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VoucherType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.HasIndex("CompanyId");

                    b.HasIndex(new[] { "VoucherNumber" }, "IX_tblFinTrnBankVoucher_VoucherNumber");

                    b.ToTable("tblFinTrnBankVoucher");
                });

            modelBuilder.Entity("CIN.Domain.GeneralLedger.BankVoucher.TblFinTrnBankVoucherApproval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AppRemarks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("BankVoucherId")
                        .HasColumnType("int");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("DocNum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("JvDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoginId")
                        .HasColumnType("int");

                    b.Property<string>("TranNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TranSource")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Trantype")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("BankVoucherId");

                    b.HasIndex("BranchCode");

                    b.HasIndex("CompanyId");

                    b.HasIndex("LoginId");

                    b.HasIndex(new[] { "TranNumber" }, "IX_tblFinTrnBankVoucherApproval_TranNumber");

                    b.ToTable("tblFinTrnBankVoucherApproval");
                });

            modelBuilder.Entity("CIN.Domain.GeneralLedger.BankVoucher.TblFinTrnBankVoucherItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BankVoucherId")
                        .HasColumnType("int");

                    b.Property<string>("Batch")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Batch2")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CostAllocation")
                        .HasColumnType("int");

                    b.Property<string>("CostSegCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("CrAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("DrAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("FinAcCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Payment")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BankVoucherId");

                    b.HasIndex("BranchCode");

                    b.HasIndex("FinAcCode");

                    b.ToTable("tblFinTrnBankVoucherItem");
                });

            modelBuilder.Entity("CIN.Domain.GeneralLedger.BankVoucher.TblFinTrnBankVoucherStatement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("BankVoucherId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVoid")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("JvDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoginId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("TranNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BankVoucherId");

                    b.HasIndex("LoginId");

                    b.HasIndex(new[] { "TranNumber" }, "IX_tblFinTrnBankVoucherStatement_TranNumber");

                    b.ToTable("tblFinTrnBankVoucherStatement");
                });

            modelBuilder.Entity("CIN.Domain.GeneralLedger.CashVoucher.TblFinTrnCashVoucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Batch")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CBookCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("DocNum")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("JvDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Narration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Posted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Source")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SpVoucherNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Void")
                        .HasColumnType("bit");

                    b.Property<string>("VoucherNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VoucherType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.HasIndex("CompanyId");

                    b.HasIndex(new[] { "VoucherNumber" }, "IX_tblFinTrnCashVoucher_VoucherNumber");

                    b.ToTable("tblFinTrnCashVoucher");
                });

            modelBuilder.Entity("CIN.Domain.GeneralLedger.CashVoucher.TblFinTrnCashVoucherApproval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AppRemarks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CashVoucherId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("DocNum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("JvDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoginId")
                        .HasColumnType("int");

                    b.Property<string>("TranNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TranSource")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Trantype")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.HasIndex("CashVoucherId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("LoginId");

                    b.HasIndex(new[] { "TranNumber" }, "IX_tblFinTrnCashVoucherApproval_TranNumber");

                    b.ToTable("tblFinTrnCashVoucherApproval");
                });

            modelBuilder.Entity("CIN.Domain.GeneralLedger.CashVoucher.TblFinTrnCashVoucherItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Batch")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Batch2")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CashVoucherId")
                        .HasColumnType("int");

                    b.Property<int?>("CostAllocation")
                        .HasColumnType("int");

                    b.Property<string>("CostSegCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("CrAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("DrAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("FinAcCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Payment")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.HasIndex("CashVoucherId");

                    b.HasIndex("FinAcCode");

                    b.ToTable("tblFinTrnCashVoucherItem");
                });

            modelBuilder.Entity("CIN.Domain.GeneralLedger.CashVoucher.TblFinTrnCashVoucherStatement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CashVoucherId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVoid")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("JvDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoginId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("TranNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CashVoucherId");

                    b.HasIndex("LoginId");

                    b.HasIndex(new[] { "TranNumber" }, "IX_tblFinTrnCashVoucherStatement_TranNumber");

                    b.ToTable("tblFinTrnCashVoucherStatement");
                });

            modelBuilder.Entity("CIN.Domain.GeneralLedger.Distribution.TblFinTrnDistribution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal?>("CrAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("DrAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("FinAcCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gl")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<long?>("InvoiceId")
                        .HasColumnType("bigint");

                    b.Property<string>("Source")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Type")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("FinAcCode");

                    b.ToTable("tblFinTrnDistribution");
                });

            modelBuilder.Entity("CIN.Domain.GeneralLedger.Ledger.TblFinTrnAccountsLedger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AcCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AcDesc")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Batch")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CostAllocation")
                        .HasColumnType("int");

                    b.Property<string>("CostSegCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("CrAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("DrAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("ExRate")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int?>("GlId")
                        .HasColumnType("int");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("Jvnum")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("MainAcCode")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Narration")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PostedFlag")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("ReverseFlag")
                        .HasColumnType("bit");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Source")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime>("TransDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("VoidFlag")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.ToTable("tblFinTrnAccountsLedger");
                });

            modelBuilder.Entity("CIN.Domain.GeneralLedger.Ledger.TblFinTrnTrialBalance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AcCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AcDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("Balance")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("CrAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("CrBalance")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("DrAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("Type")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("tblFinTrnTrialBalance");
                });

            modelBuilder.Entity("CIN.Domain.GeneralLedger.TblFinTrnJournalVoucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Batch")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("DocNum")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("JvDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Narration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Posted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Source")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SpVoucherNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Void")
                        .HasColumnType("bit");

                    b.Property<string>("VoucherNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.HasIndex("CompanyId");

                    b.HasIndex(new[] { "VoucherNumber" }, "IX_tblFinTrnJournalVoucher_VoucherNumber");

                    b.ToTable("tblFinTrnJournalVoucher");
                });

            modelBuilder.Entity("CIN.Domain.GeneralLedger.TblFinTrnJournalVoucherApproval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AppRemarks")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("DocNum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<int?>("JournalVoucherId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("JvDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoginId")
                        .HasColumnType("int");

                    b.Property<string>("TranNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TranSource")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Trantype")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.HasIndex("CompanyId");

                    b.HasIndex("JournalVoucherId");

                    b.HasIndex("LoginId");

                    b.HasIndex(new[] { "TranNumber" }, "IX_tblFinTrnJournalVoucherApproval_TranNumber");

                    b.ToTable("tblFinTrnJournalVoucherApproval");
                });

            modelBuilder.Entity("CIN.Domain.GeneralLedger.TblFinTrnJournalVoucherItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Batch")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Batch2")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CostAllocation")
                        .HasColumnType("int");

                    b.Property<string>("CostSegCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("CrAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("DrAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("FinAcCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("JournalVoucherId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.HasIndex("FinAcCode");

                    b.HasIndex("JournalVoucherId");

                    b.ToTable("tblFinTrnJournalVoucherItem");
                });

            modelBuilder.Entity("CIN.Domain.GeneralLedger.TblFinTrnJournalVoucherStatement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVoid")
                        .HasColumnType("bit");

                    b.Property<int?>("JournalVoucherId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("JvDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoginId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("TranNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("JournalVoucherId");

                    b.HasIndex("LoginId");

                    b.HasIndex(new[] { "TranNumber" }, "IX_tblFinTrnJournalVoucherStatement_TranNumber");

                    b.ToTable("tblFinTrnJournalVoucherStatement");
                });

            modelBuilder.Entity("CIN.Domain.HRMAdminMgt.TblHRMSysPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PositionCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PositionNameAr")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PositionNameEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("tblHRMSysPosition");
                });

            modelBuilder.Entity("CIN.Domain.InventoryMgt.Adjustments", b =>
                {
                    b.Property<decimal>("PositiveSum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NegativeSum")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PositiveSum");

                    b.ToTable("Adjs");
                });

            modelBuilder.Entity("CIN.Domain.InventoryMgt.TblIMAdjustmentsTransactionDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("INVADJAcc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("INVAcc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemAttribute1")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ItemAttribute2")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("Remarks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranBarcode")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("TranDate")
                        .HasColumnType("date");

                    b.Property<string>("TranItemCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("TranItemCost")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("TranItemName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TranItemName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("TranItemQty")
                        .HasColumnType("decimal(8,3)");

                    b.Property<string>("TranItemUnit")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TranLocation")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TranNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TranToLocation")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("TranTotCost")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("TranType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("TranUOMFactor")
                        .HasColumnType("decimal(10,5)");

                    b.HasKey("Id");

                    b.ToTable("tblIMAdjustmentsTransactionDetails");
                });

            modelBuilder.Entity("CIN.Domain.InventoryMgt.TblIMAdjustmentsTransactionHeader", b =>
                {
                    b.Property<string>("TranNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<string>("JVNum")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("TranBranch")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("TranCreateDate")
                        .HasColumnType("date");

                    b.Property<string>("TranCreateUser")
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("TranDate")
                        .HasColumnType("date");

                    b.Property<string>("TranDocNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TranInvAccount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TranInvAdjAccount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("TranLastEditDate")
                        .HasColumnType("date");

                    b.Property<string>("TranLastEditUser")
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("TranLocation")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<short>("TranLockStat")
                        .HasColumnType("smallint");

                    b.Property<string>("TranLockUser")
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("TranPostDate")
                        .HasColumnType("date");

                    b.Property<short>("TranPostStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("TranReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TranRemarks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TranToLocation")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("TranTotItems")
                        .HasColumnType("int");

                    b.Property<decimal>("TranTotalCost")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("TranType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TranUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("TranVoidStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("TranVoidUser")
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("TranpostUser")
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("TranvoidDate")
                        .HasColumnType("date");

                    b.HasKey("TranNumber");

                    b.ToTable("tblIMAdjustmentsTransactionHeader");
                });

            modelBuilder.Entity("CIN.Domain.InventoryMgt.TblIMReceiptsTransactionDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("INVADJAcc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("INVAcc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemAttribute1")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ItemAttribute2")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("Remarks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranBarcode")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("TranDate")
                        .HasColumnType("date");

                    b.Property<string>("TranItemCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("TranItemCost")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("TranItemName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TranItemName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("TranItemQty")
                        .HasColumnType("decimal(8,3)");

                    b.Property<string>("TranItemUnit")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TranLocation")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TranNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TranToLocation")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("TranTotCost")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("TranType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("TranUOMFactor")
                        .HasColumnType("decimal(10,5)");

                    b.HasKey("Id");

                    b.ToTable("tblIMReceiptsTransactionDetails");
                });

            modelBuilder.Entity("CIN.Domain.InventoryMgt.TblIMReceiptsTransactionHeader", b =>
                {
                    b.Property<string>("TranNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<string>("JVNum")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("TranBranch")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("TranCreateDate")
                        .HasColumnType("date");

                    b.Property<string>("TranCreateUser")
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("TranDate")
                        .HasColumnType("date");

                    b.Property<string>("TranDocNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TranInvAccount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TranInvAdjAccount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("TranLastEditDate")
                        .HasColumnType("date");

                    b.Property<string>("TranLastEditUser")
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("TranLocation")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<short>("TranLockStat")
                        .HasColumnType("smallint");

                    b.Property<string>("TranLockUser")
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("TranPostDate")
                        .HasColumnType("date");

                    b.Property<short>("TranPostStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("TranReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TranRemarks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TranToLocation")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("TranTotItems")
                        .HasColumnType("int");

                    b.Property<decimal>("TranTotalCost")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("TranType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TranUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("TranVoidStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("TranVoidUser")
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("TranpostUser")
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("TranvoidDate")
                        .HasColumnType("date");

                    b.HasKey("TranNumber");

                    b.ToTable("tblIMReceiptsTransactionHeader");
                });

            modelBuilder.Entity("CIN.Domain.InventoryMgt.TblIMStockReconciliationTransactionDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("INVADJAcc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("INVAcc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemAttribute1")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ItemAttribute2")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("Remarks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranBarcode")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("TranDate")
                        .HasColumnType("date");

                    b.Property<string>("TranItemCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("TranItemCost")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("TranItemName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TranItemName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("TranItemQty")
                        .HasColumnType("decimal(8,3)");

                    b.Property<string>("TranItemUnit")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TranLocation")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TranNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TranToLocation")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("TranTotCost")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("TranType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("TranUOMFactor")
                        .HasColumnType("decimal(10,5)");

                    b.HasKey("Id");

                    b.ToTable("tblIMStockReconciliationTransactionDetails");
                });

            modelBuilder.Entity("CIN.Domain.InventoryMgt.TblIMStockReconciliationTransactionHeader", b =>
                {
                    b.Property<string>("TranNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("JVNum")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<DateTime>("TranCreateDate")
                        .HasColumnType("date");

                    b.Property<string>("TranCreateUser")
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("TranDate")
                        .HasColumnType("date");

                    b.Property<string>("TranDocNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TranInvAccount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TranInvAdjAccount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("TranLastEditDate")
                        .HasColumnType("date");

                    b.Property<string>("TranLastEditUser")
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("TranLocation")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<short>("TranLockStat")
                        .HasColumnType("smallint");

                    b.Property<string>("TranLockUser")
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("TranPostDate")
                        .HasColumnType("date");

                    b.Property<short>("TranPostStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("TranReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TranRemarks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TranToLocation")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("TranTotItems")
                        .HasColumnType("int");

                    b.Property<decimal>("TranTotalCost")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("TranType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TranUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("TranVoidStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("TranVoidUser")
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("TranpostUser")
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("TranvoidDate")
                        .HasColumnType("date");

                    b.HasKey("TranNumber");

                    b.ToTable("tblIMStockReconciliationTransactionHeader");
                });

            modelBuilder.Entity("CIN.Domain.InventoryMgt.TblIMTransactionDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("INVADJAcc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("INVAcc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemAttribute1")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ItemAttribute2")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("Remarks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranBarcode")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("TranDate")
                        .HasColumnType("date");

                    b.Property<string>("TranItemCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("TranItemCost")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("TranItemName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TranItemName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("TranItemQty")
                        .HasColumnType("decimal(8,3)");

                    b.Property<string>("TranItemUnit")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TranLocation")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TranNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TranToLocation")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("TranTotCost")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("TranType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("TranUOMFactor")
                        .HasColumnType("decimal(10,5)");

                    b.HasKey("Id");

                    b.ToTable("tblIMTransactionDetails");
                });

            modelBuilder.Entity("CIN.Domain.InventoryMgt.TblIMTransactionHeader", b =>
                {
                    b.Property<string>("TranNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<string>("JVNum")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("TranBranch")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("TranCreateDate")
                        .HasColumnType("date");

                    b.Property<string>("TranCreateUser")
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("TranDate")
                        .HasColumnType("date");

                    b.Property<string>("TranDocNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TranInvAccount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TranInvAdjAccount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("TranLastEditDate")
                        .HasColumnType("date");

                    b.Property<string>("TranLastEditUser")
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("TranLocation")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<short>("TranLockStat")
                        .HasColumnType("smallint");

                    b.Property<string>("TranLockUser")
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("TranPostDate")
                        .HasColumnType("date");

                    b.Property<short>("TranPostStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("TranReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TranRemarks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TranToLocation")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("TranTotItems")
                        .HasColumnType("int");

                    b.Property<decimal>("TranTotalCost")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("TranType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TranUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("TranVoidStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("TranVoidUser")
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("TranpostUser")
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("TranvoidDate")
                        .HasColumnType("date");

                    b.HasKey("TranNumber");

                    b.ToTable("tblIMTransactionHeader");
                });

            modelBuilder.Entity("CIN.Domain.InventoryMgt.TblIMTransferTransactionDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("INVADJAcc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("INVAcc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemAttribute1")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ItemAttribute2")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("Remarks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranBarcode")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("TranDate")
                        .HasColumnType("date");

                    b.Property<string>("TranItemCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("TranItemCost")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("TranItemName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TranItemName2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("TranItemQty")
                        .HasColumnType("decimal(8,3)");

                    b.Property<string>("TranItemUnit")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TranLocation")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TranNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TranToLocation")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("TranTotCost")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("TranType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("TranUOMFactor")
                        .HasColumnType("decimal(10,5)");

                    b.HasKey("Id");

                    b.ToTable("tblIMTransferTransactionDetails");
                });

            modelBuilder.Entity("CIN.Domain.InventoryMgt.TblIMTransferTransactionHeader", b =>
                {
                    b.Property<string>("TranNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("BranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<string>("JVNum")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<DateTime>("TranCreateDate")
                        .HasColumnType("date");

                    b.Property<string>("TranCreateUser")
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("TranDate")
                        .HasColumnType("date");

                    b.Property<string>("TranDocNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TranInvAccount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TranInvAdjAccount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("TranLastEditDate")
                        .HasColumnType("date");

                    b.Property<string>("TranLastEditUser")
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("TranLocation")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<short>("TranLockStat")
                        .HasColumnType("smallint");

                    b.Property<string>("TranLockUser")
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("TranPostDate")
                        .HasColumnType("date");

                    b.Property<short>("TranPostStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("TranReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TranRemarks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TranToLocation")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("TranTotItems")
                        .HasColumnType("int");

                    b.Property<decimal>("TranTotalCost")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("TranType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TranUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("TranVoidStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("TranVoidUser")
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("TranpostUser")
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("TranvoidDate")
                        .HasColumnType("date");

                    b.HasKey("TranNumber");

                    b.HasIndex("BranchCode");

                    b.ToTable("tblIMTransferTransactionHeader");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblErpInvItemInventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<decimal>("EOQ")
                        .HasColumnType("decimal(12,5)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("ItemAvgCost")
                        .HasColumnType("numeric(11,5)");

                    b.Property<string>("ItemCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("ItemLandedCost")
                        .HasColumnType("numeric(11,5)");

                    b.Property<decimal>("ItemLastPOCost")
                        .HasColumnType("numeric(11,5)");

                    b.Property<decimal>("MaxQty")
                        .HasColumnType("decimal(12,5)");

                    b.Property<decimal>("MinQty")
                        .HasColumnType("decimal(12,5)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<decimal>("QtyOH")
                        .HasColumnType("decimal(12,5)");

                    b.Property<decimal>("QtyOnPO")
                        .HasColumnType("decimal(12,5)");

                    b.Property<decimal>("QtyOnSalesOrder")
                        .HasColumnType("decimal(12,5)");

                    b.Property<decimal>("QtyReserved")
                        .HasColumnType("decimal(12,5)");

                    b.Property<string>("WHCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("ItemCode");

                    b.HasIndex("WHCode");

                    b.ToTable("tblErpInvItemInventory");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblErpInvItemInventoryHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("ItemAvgCost")
                        .HasColumnType("decimal(12,5)");

                    b.Property<string>("ItemCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<DateTime>("TranDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TranNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("TranPrice")
                        .HasColumnType("decimal(12,5)");

                    b.Property<decimal>("TranQty")
                        .HasColumnType("decimal(12,5)");

                    b.Property<string>("TranRemarks")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("TranTotQty")
                        .HasColumnType("decimal(12,5)");

                    b.Property<string>("TranType")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("TranUnit")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("WHCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("unitConvFactor")
                        .HasColumnType("decimal(12,5)");

                    b.HasKey("Id");

                    b.HasIndex("ItemCode");

                    b.HasIndex("WHCode");

                    b.ToTable("tblErpInvItemInventoryHistory");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblErpInvItemMaster", b =>
                {
                    b.Property<string>("ItemCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("AllowDiscounts")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowPriceOverride")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowQuantityOverride")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("HSNCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemAvgCost")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ItemBaseUnit")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ItemCat")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ItemClass")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ItemDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemDescriptionAr")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemPrimeVendor")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ItemStandardCost")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("ItemStandardPrice1")
                        .HasColumnType("decimal(12,5)");

                    b.Property<decimal>("ItemStandardPrice2")
                        .HasColumnType("decimal(12,5)");

                    b.Property<decimal>("ItemStandardPrice3")
                        .HasColumnType("decimal(12,5)");

                    b.Property<string>("ItemSubCat")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ItemSubClass")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ItemTaxCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ItemTracking")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ItemType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ItemWeight")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("ShortName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ShortNameAr")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("ItemCode");

                    b.HasIndex("ItemBaseUnit");

                    b.HasIndex("ItemCat");

                    b.HasIndex("ItemClass");

                    b.HasIndex("ItemSubCat");

                    b.HasIndex("ItemSubClass");

                    b.HasIndex("ItemTaxCode");

                    b.ToTable("tblErpInvItemMaster");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblErpInvItemNotes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("NoteDates")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ItemCode");

                    b.ToTable("tblErpInvItemNotes");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblErpInvItemsBarcode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemBarcode")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ItemCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ItemUOM")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<short>("ItemUOMFlag")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("ItemCode");

                    b.HasIndex("ItemUOM");

                    b.ToTable("tblErpInvItemsBarcode");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblErpInvItemsUOM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("ItemAvgCost")
                        .HasColumnType("numeric(11,5)");

                    b.Property<string>("ItemCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("ItemConvFactor")
                        .HasColumnType("decimal(12,5)");

                    b.Property<decimal>("ItemLandedCost")
                        .HasColumnType("numeric(11,5)");

                    b.Property<decimal>("ItemLastPOCost")
                        .HasColumnType("numeric(11,5)");

                    b.Property<string>("ItemUOM")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("ItemUOMDiscPer")
                        .HasColumnType("numeric(6,3)");

                    b.Property<short>("ItemUOMFlag")
                        .HasColumnType("smallint");

                    b.Property<decimal>("ItemUOMPrice1")
                        .HasColumnType("decimal(12,5)");

                    b.Property<decimal>("ItemUOMPrice2")
                        .HasColumnType("decimal(12,5)");

                    b.Property<decimal>("ItemUOMPrice3")
                        .HasColumnType("numeric(10,3)");

                    b.Property<decimal>("ItemUOMPrice4")
                        .HasColumnType("numeric(10,3)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("ItemCode");

                    b.HasIndex("ItemUOM");

                    b.ToTable("tblErpInvItemsUOM");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblErpInvItemtracking", b =>
                {
                    b.Property<string>("TrCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("TrName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TypeCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("TrCode");

                    b.ToTable("tblInvDefTracking");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblErpInvItemtype", b =>
                {
                    b.Property<string>("TypeCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TypeCode");

                    b.ToTable("tblInvDefType");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblInvDefCategory", b =>
                {
                    b.Property<string>("ItemCatCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCatDesc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ItemCatName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ItemCatPrefix")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.HasKey("ItemCatCode");

                    b.ToTable("tblInvDefCategory");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblInvDefClass", b =>
                {
                    b.Property<string>("ItemClassCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemClassDesce")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ItemClassName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.HasKey("ItemClassCode");

                    b.ToTable("tblInvDefClass");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblInvDefDistributionGroup", b =>
                {
                    b.Property<string>("InvDistGroup")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("InvAdjAc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvAssetAc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvCOGSAc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvCashPOAC")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvCostCorAc")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvDefaultAPAc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvInTransitAc")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvNonAssetAc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvSalesAc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvWIPAc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvWriteOffAc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.HasKey("InvDistGroup");

                    b.HasIndex("InvAdjAc");

                    b.HasIndex("InvAssetAc");

                    b.HasIndex("InvCOGSAc");

                    b.HasIndex("InvCashPOAC");

                    b.HasIndex("InvCostCorAc");

                    b.HasIndex("InvDefaultAPAc");

                    b.HasIndex("InvInTransitAc");

                    b.HasIndex("InvNonAssetAc");

                    b.HasIndex("InvSalesAc");

                    b.HasIndex("InvWIPAc");

                    b.HasIndex("InvWriteOffAc");

                    b.ToTable("tblInvDefDistributionGroup");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblInvDefInventoryConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("AutoGenItemCode")
                        .HasColumnType("bit");

                    b.Property<short>("CategoryLength")
                        .HasColumnType("smallint");

                    b.Property<string>("CentralWHCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<short>("ItemLength")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("NewItemIndicator")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("PrefixCatCode")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CentralWHCode");

                    b.ToTable("tblInvDefInventoryConfig");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblInvDefSubCategory", b =>
                {
                    b.Property<string>("ItemSubCatCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCatCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ItemSubCatDesc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ItemSubCatName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("SubCatKey")
                        .HasMaxLength(41)
                        .HasColumnType("nvarchar(41)");

                    b.HasKey("ItemSubCatCode");

                    b.HasIndex("ItemCatCode");

                    b.ToTable("tblInvDefSubCategory");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblInvDefSubClass", b =>
                {
                    b.Property<string>("ItemSubClassCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemSubClassDesce")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ItemSubClassName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.HasKey("ItemSubClassCode");

                    b.ToTable("tblInvDefSubClass");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblInvDefUOM", b =>
                {
                    b.Property<string>("UOMCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("UOMDesc")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UOMName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UOMCode");

                    b.ToTable("tblInvDefUOM");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblInvDefWarehouse", b =>
                {
                    b.Property<string>("WHCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("InvDistGroup")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("WHAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("WHBranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("WHCity")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("WHDesc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WHIncharge")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WHName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WHState")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("WhAllowDirectPur")
                        .HasColumnType("bit");

                    b.HasKey("WHCode");

                    b.HasIndex("InvDistGroup");

                    b.HasIndex("WHBranchCode");

                    b.ToTable("tblInvDefWarehouse");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblInvDefWarehouseTest", b =>
                {
                    b.Property<string>("WHCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("InvDistGroup")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("WHAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("WHBranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("WHCity")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("WHDesc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WHIncharge")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WHName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WHState")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("WhAllowDirectPur")
                        .HasColumnType("bit");

                    b.HasKey("WHCode");

                    b.ToTable("tblInvDefWarehouseTest");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblInventoryDefDistributionGroup", b =>
                {
                    b.Property<string>("InvDistGroup")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("InvAdjAc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvAssetAc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvCOGSAc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvCashPOAC")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvCostCorAc")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvDefaultAPAc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvInTransitAc")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvNonAssetAc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvSalesAc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvWIPAc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvWriteOffAc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.HasKey("InvDistGroup");

                    b.HasIndex("InvAdjAc");

                    b.HasIndex("InvAssetAc");

                    b.HasIndex("InvCOGSAc");

                    b.HasIndex("InvCashPOAC");

                    b.HasIndex("InvCostCorAc");

                    b.HasIndex("InvDefaultAPAc");

                    b.HasIndex("InvInTransitAc");

                    b.HasIndex("InvNonAssetAc");

                    b.HasIndex("InvSalesAc");

                    b.HasIndex("InvWIPAc");

                    b.HasIndex("InvWriteOffAc");

                    b.ToTable("tblInventoryDefDistributionGroup");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblFinTrnAdvanceWallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("AdvAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("AppliedAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("CustCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DocNum")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PayCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("PaymentId")
                        .HasColumnType("int");

                    b.Property<decimal>("PostedAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("PreparedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("SNDId")
                        .HasColumnType("int");

                    b.Property<int>("SNDInvNum")
                        .HasColumnType("int");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("TranDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CustCode");

                    b.ToTable("TblFinTrnAdvanceWallet");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblFinTrnCustomerApproval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AppRemarks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CustCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DocNum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("InvoiceId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<int>("LoginId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TranDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TranNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TranSource")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Trantype")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CustCode");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("LoginId");

                    b.HasIndex(new[] { "TranNumber" }, "IX_tblFinTrnCustomerApproval_TranNumber");

                    b.ToTable("tblFinTrnCustomerApproval");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblFinTrnCustomerInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal?>("AppliedAmount")
                        .IsRequired()
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("BalanceAmount")
                        .IsRequired()
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<short>("CreditDays")
                        .HasColumnType("smallint");

                    b.Property<string>("CustCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("DiscountAmount")
                        .IsRequired()
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("DocNum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("InvoiceAmount")
                        .IsRequired()
                        .HasColumnType("decimal(18,3)");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InvoiceId")
                        .HasColumnType("bigint");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<int>("LoginId")
                        .HasColumnType("int");

                    b.Property<decimal?>("NetAmount")
                        .IsRequired()
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("PaidAmount")
                        .IsRequired()
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("ReferenceNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("TranSource")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Trantype")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CustCode");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("LoginId");

                    b.HasIndex(new[] { "InvoiceNumber" }, "IX_tblFinTrnCustomerInvoice_InvoiceNumber");

                    b.ToTable("tblFinTrnCustomerInvoice");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblFinTrnCustomerPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CheckNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CustCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DocNum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<string>("Narration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PayType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Preparedby")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("TranDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VoucherNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CustCode");

                    b.ToTable("tblFinTrnCustomerPayment");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblFinTrnCustomerStatement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CheckNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CrAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("CustCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DocNum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("DrAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<long?>("InvoiceId")
                        .HasColumnType("bigint");

                    b.Property<int>("LoginId")
                        .HasColumnType("int");

                    b.Property<string>("PamentCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ReferenceNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("TranDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TranNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TranSource")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Trantype")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CustCode");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("LoginId");

                    b.HasIndex(new[] { "TranNumber" }, "IX_tblFinTrnCustomerStatement_TranNumber");

                    b.ToTable("tblFinTrnCustomerStatement");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblFinTrnCustomerWallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("AdvAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("AppliedAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("CustCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("PostedAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("Source")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("tblFinTrnCustomerWallet");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblFinTrnOpmCustomerPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("AppliedAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("BalanceAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("CrAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("CustCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("DocNum")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Flag1")
                        .HasColumnType("bit");

                    b.Property<bool>("Flag2")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("InvoiceDueDate")
                        .HasColumnType("date");

                    b.Property<long?>("InvoiceId")
                        .HasColumnType("bigint");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("InvoiceRefNumber")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NetAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int>("PaymentId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("TranDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.HasIndex("CustCode");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("PaymentId");

                    b.ToTable("tblFinTrnOpmCustomerPayment");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblFinTrnOpmCustomerPaymentHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CheckNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CrAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("CustCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("DocNum")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Flag1")
                        .HasColumnType("bit");

                    b.Property<bool>("Flag2")
                        .HasColumnType("bit");

                    b.Property<decimal?>("InvoiceAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("InvoiceRefNumber")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVoid")
                        .HasColumnType("bit");

                    b.Property<string>("Narration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PayType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("PaymentNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Preparedby")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Reason")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("TranDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("VoidDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CustCode");

                    b.ToTable("tblFinTrnOpmCustomerPaymentHeader");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblFinTrnOpmVendorPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("AppliedAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("BalanceAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("CrAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("DocNum")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Flag1")
                        .HasColumnType("bit");

                    b.Property<bool>("Flag2")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("InvoiceDueDate")
                        .HasColumnType("date");

                    b.Property<long?>("InvoiceId")
                        .HasColumnType("bigint");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("InvoiceRefNumber")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NetAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int>("PaymentId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("TranDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VendCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("VendCode");

                    b.ToTable("tblFinTrnOpmVendorPayment");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblFinTrnOpmVendorPaymentHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CheckNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CrAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("DocNum")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Flag1")
                        .HasColumnType("bit");

                    b.Property<bool>("Flag2")
                        .HasColumnType("bit");

                    b.Property<decimal?>("InvoiceAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("InvoiceRefNumber")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVoid")
                        .HasColumnType("bit");

                    b.Property<string>("Narration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PayType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("PaymentNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Preparedby")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Reason")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("TranDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VendCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("VoidDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.HasIndex("CompanyId");

                    b.HasIndex("VendCode");

                    b.ToTable("tblFinTrnOpmVendorPaymentHeader");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblFinTrnOverShortAmount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("AmtType")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("PaymentId")
                        .HasColumnType("int");

                    b.Property<string>("Source")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("tblFinTrnOverShortAmount");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblFinTrnVendorApproval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AppRemarks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("DocNum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("InvoiceId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<int>("LoginId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TranDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TranNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TranSource")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Trantype")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("VendCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.HasIndex("CompanyId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("LoginId");

                    b.HasIndex("VendCode");

                    b.HasIndex(new[] { "TranNumber" }, "IX_tblFinTrnVendorApproval_TranNumber");

                    b.ToTable("tblFinTrnVendorApproval");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblFinTrnVendorInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal?>("AppliedAmount")
                        .IsRequired()
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("BalanceAmount")
                        .IsRequired()
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<short>("CreditDays")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("DiscountAmount")
                        .IsRequired()
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("DocNum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("InvoiceAmount")
                        .IsRequired()
                        .HasColumnType("decimal(18,3)");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InvoiceId")
                        .HasColumnType("bigint");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<int>("LoginId")
                        .HasColumnType("int");

                    b.Property<decimal?>("NetAmount")
                        .IsRequired()
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("PaidAmount")
                        .IsRequired()
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("ReferenceNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("TranSource")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Trantype")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("VendCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.HasIndex("CompanyId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("LoginId");

                    b.HasIndex("VendCode");

                    b.HasIndex(new[] { "InvoiceNumber" }, "IX_tblFinTrnVendorInvoice_InvoiceNumber");

                    b.ToTable("tblFinTrnVendorInvoice");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblFinTrnVendorPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CheckNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("DocNum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<string>("Narration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PayType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Preparedby")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("TranDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VendCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("VoucherNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.HasIndex("CompanyId");

                    b.HasIndex("VendCode");

                    b.ToTable("tblFinTrnVendorPayment");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblFinTrnVendorStatement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CheckNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CrAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("DocNum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("DrAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<long?>("InvoiceId")
                        .HasColumnType("bigint");

                    b.Property<int>("LoginId")
                        .HasColumnType("int");

                    b.Property<string>("PamentCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ReferenceNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks1")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Remarks2")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("TranDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TranNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TranSource")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Trantype")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("VendCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.HasIndex("CompanyId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("LoginId");

                    b.HasIndex("VendCode");

                    b.HasIndex(new[] { "TranNumber" }, "IX_tblFinTrnVendorStatement_TranNumber");

                    b.ToTable("tblFinTrnVendorStatement");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblSequenceNumberSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ApPaymentNumber")
                        .HasColumnType("int");

                    b.Property<int>("ApVoucherSeq")
                        .HasColumnType("int");

                    b.Property<int>("ArPaymentNumber")
                        .HasColumnType("int");

                    b.Property<string>("BranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("BvVoucherSeq")
                        .HasColumnType("int");

                    b.Property<int>("CreditSeq")
                        .HasColumnType("int");

                    b.Property<int>("CvVoucherSeq")
                        .HasColumnType("int");

                    b.Property<int>("GRNNumber")
                        .HasColumnType("int");

                    b.Property<int>("InvCredSeq")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceSeq")
                        .HasColumnType("int");

                    b.Property<int>("JvVoucherSeq")
                        .HasColumnType("int");

                    b.Property<int>("PONumber")
                        .HasColumnType("int");

                    b.Property<int>("PRNumber")
                        .HasColumnType("int");

                    b.Property<int>("SDDeliveryNumber")
                        .HasColumnType("int");

                    b.Property<int>("SDInvRetNumber")
                        .HasColumnType("int");

                    b.Property<int>("SDInvoiceNumber")
                        .HasColumnType("int");

                    b.Property<int>("SDOrderNumber")
                        .HasColumnType("int");

                    b.Property<int>("SDQuoteNumber")
                        .HasColumnType("int");

                    b.Property<int>("VendCreditSeq")
                        .HasColumnType("int");

                    b.Property<int>("VoucherSeq")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tblSequenceNumberSetting");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblSndTranInvoice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<decimal?>("AmountBeforeTax")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("AmountDue")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CustArbName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CustName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("DeleveryRefNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<short>("FooterDiscount")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("InvoiceDueDate")
                        .HasColumnType("date");

                    b.Property<string>("InvoiceModule")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("InvoiceNotes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("InvoiceRefNumber")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("InvoiceStatus")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("InvoiceStatusId")
                        .HasColumnType("int");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCreditConverted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDefaultConfig")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsQtyDeducted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSettled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVoid")
                        .HasColumnType("bit");

                    b.Property<string>("LpoContract")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PaymentTermId")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ServiceDate1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpInvoiceNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TaxAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("TaxIdNumber")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalPayment")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("VatPercentage")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("WarehouseCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerCode");

                    b.HasIndex("PaymentTermId");

                    b.HasIndex("WarehouseCode");

                    b.ToTable("tblSndTranInvoice");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblSndTranInvoiceItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<decimal?>("AmountBeforeTax")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<long?>("CreditMemoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DebitMemoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<short?>("Discount")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<long?>("InvoiceId")
                        .HasColumnType("bigint");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short?>("InvoiceType")
                        .HasColumnType("smallint");

                    b.Property<bool?>("IsDefaultConfig")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ItemAvgCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("NetQuantity")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TaxAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TaxTariffPercentage")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("UnitType")
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ItemCode");

                    b.HasIndex("UnitType");

                    b.ToTable("tblSndTranInvoiceItem");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblSndTranInvoicePaymentSettlements", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("date");

                    b.Property<long>("InvoiceId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<string>("PaymentCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SettledAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("SettledBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("SettledDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("PaymentCode");

                    b.ToTable("tblSndTranInvoicePaymentSettlements");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblTranDefProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Barcode")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CostPrice")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("IsDefaultConfig")
                        .HasColumnType("bit");

                    b.Property<string>("NameAR")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NameEN")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int?>("UnitTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("ProductTypeId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("tblTranDefProduct");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblTranDefProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDefaultConfig")
                        .HasColumnType("bit");

                    b.Property<string>("NameAR")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NameEN")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("tblTranDefProductType");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblTranDefTax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("NameAR")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameEN")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("TaxTariffPercentage")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("tblTranDefTax");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblTranDefUnitType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDefaultConfig")
                        .HasColumnType("bit");

                    b.Property<string>("NameAR")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NameEN")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("tblTranDefUnitType");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblTranInvoice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<decimal?>("AmountBeforeTax")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("AmountDue")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("BranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CustArbName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CustName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("InvoiceDueDate")
                        .HasColumnType("date");

                    b.Property<string>("InvoiceModule")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("InvoiceNotes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("InvoiceRefNumber")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("InvoiceStatus")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("InvoiceStatusId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCreditConverted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDefaultConfig")
                        .HasColumnType("bit");

                    b.Property<string>("LpoContract")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PaymentTerms")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ServiceDate1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SpInvoiceNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TaxAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("TaxIdNumber")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TotalPayment")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("VatPercentage")
                        .HasColumnType("decimal(18,3)");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.HasIndex("PaymentTerms");

                    b.ToTable("tblTranInvoice");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblTranInvoiceItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<decimal?>("AmountBeforeTax")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<long?>("CreditMemoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DebitMemoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<short?>("Discount")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<long?>("InvoiceId")
                        .HasColumnType("bigint");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short?>("InvoiceType")
                        .HasColumnType("smallint");

                    b.Property<bool?>("IsDefaultConfig")
                        .HasColumnType("bit");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TaxAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TaxTariffPercentage")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("tblTranInvoiceItem");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblTranVenInvoice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<decimal?>("AmountBeforeTax")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("AmountDue")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("BranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("CreditNumber")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("InvoiceDueDate")
                        .HasColumnType("date");

                    b.Property<string>("InvoiceModule")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("InvoiceNotes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("InvoiceRefNumber")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("InvoiceStatus")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("InvoiceStatusId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCreditConverted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDefaultConfig")
                        .HasColumnType("bit");

                    b.Property<string>("LpoContract")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PaymentTerms")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ServiceDate1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SpCreditNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TaxAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("TaxIdNumber")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TotalPayment")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("VatPercentage")
                        .HasColumnType("decimal(18,3)");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.HasIndex("PaymentTerms");

                    b.ToTable("TblTranVenInvoice");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblTranVenInvoiceItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<decimal?>("AmountBeforeTax")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<long?>("CreditId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreditMemoId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreditNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("DebitMemoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<short?>("Discount")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<short?>("InvoiceType")
                        .HasColumnType("smallint");

                    b.Property<bool?>("IsDefaultConfig")
                        .HasColumnType("bit");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TaxAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TaxTariffPercentage")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("CreditId");

                    b.ToTable("TblTranVenInvoiceItem");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.HRM_DEF_EmployeeShift", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<long>("EmployeeID")
                        .HasColumnType("bigint");

                    b.Property<short?>("FridayShiftId")
                        .HasColumnType("smallint");

                    b.Property<short?>("MondayShiftId")
                        .HasColumnType("smallint");

                    b.Property<short?>("SaturdayShiftId")
                        .HasColumnType("smallint");

                    b.Property<short?>("SundayShiftId")
                        .HasColumnType("smallint");

                    b.Property<short?>("ThursdayShiftId")
                        .HasColumnType("smallint");

                    b.Property<short?>("TuesdayShiftId")
                        .HasColumnType("smallint");

                    b.Property<short?>("WednesdayShiftId")
                        .HasColumnType("smallint");

                    b.HasKey("ID");

                    b.ToTable("HRM_DEF_EmployeeShift");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.HRM_DEF_PayrollGroup", b =>
                {
                    b.Property<long>("PayrollGroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("BranchID")
                        .HasColumnType("bigint");

                    b.Property<long?>("BusinessUnitID")
                        .HasColumnType("bigint");

                    b.Property<long?>("CompanyID")
                        .HasColumnType("bigint");

                    b.Property<long?>("CountryID")
                        .HasColumnType("bigint");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("CurrentPayRollMonth")
                        .HasColumnType("smallint");

                    b.Property<short?>("CurrentPayRollYear")
                        .HasColumnType("smallint");

                    b.Property<long?>("DepartmentID")
                        .HasColumnType("bigint");

                    b.Property<long?>("DivisionID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EndPayRollDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsForAllEmployee")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsForFutureEmployee")
                        .HasColumnType("bit");

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PayrollGroupName_AR")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PayrollGroupName_EN")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long?>("SiteID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("StartPayRollDate")
                        .HasColumnType("date");

                    b.HasKey("PayrollGroupID");

                    b.ToTable("HRM_DEF_PayrollGroup");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.OP_HRM_TEMP_Project", b =>
                {
                    b.Property<string>("ProjectCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<int?>("FileUploadBy")
                        .HasColumnType("int");

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConvertedToProposal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConvrtedToContract")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEstimationCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExpenceOverheadsAssigned")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLogisticsAssigned")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMaterialAssigned")
                        .HasColumnType("bit");

                    b.Property<bool>("IsResourcesAssigned")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShiftsAssigned")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSkillSetsMapped")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("ProjectNameArb")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProjectNameEng")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("ProjectCode");

                    b.ToTable("OP_HRM_TEMP_Project");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpAuthorities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AppAuth")
                        .HasColumnType("int");

                    b.Property<short>("AppLevel")
                        .HasColumnType("smallint");

                    b.Property<string>("BranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("CanAddSurveyorToEnquiry")
                        .HasColumnType("bit");

                    b.Property<bool>("CanApproveContract")
                        .HasColumnType("bit");

                    b.Property<bool>("CanApproveEnquiry")
                        .HasColumnType("bit");

                    b.Property<bool>("CanApproveEstimation")
                        .HasColumnType("bit");

                    b.Property<bool>("CanApproveProposal")
                        .HasColumnType("bit");

                    b.Property<bool>("CanApprovePvReq")
                        .HasColumnType("bit");

                    b.Property<bool>("CanApproveSurvey")
                        .HasColumnType("bit");

                    b.Property<bool>("CanConvertEnqToProject")
                        .HasColumnType("bit");

                    b.Property<bool>("CanConvertEstimationToProposal")
                        .HasColumnType("bit");

                    b.Property<bool>("CanConvertProposalToContract")
                        .HasColumnType("bit");

                    b.Property<bool>("CanCreateRoaster")
                        .HasColumnType("bit");

                    b.Property<bool>("CanEditEnquiry")
                        .HasColumnType("bit");

                    b.Property<bool>("CanEditPvReq")
                        .HasColumnType("bit");

                    b.Property<bool>("CanEditRoaster")
                        .HasColumnType("bit");

                    b.Property<bool>("CanModifyEstimation")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinalAuthority")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("tblOpAuthorities");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpContractClause", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("ClauseDescriptionArb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClauseDescriptionEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClauseSubTitleArb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClauseSubTitleEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClauseTitleArb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClauseTitleEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberArb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberEng")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblOpContractClause");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpContractClausesToContractFormMap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("ClauseDescriptionArb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClauseDescriptionEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClauseSubTitleArb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClauseSubTitleEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClauseTitleArb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClauseTitleEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ContractFormId")
                        .HasColumnType("bigint");

                    b.Property<string>("NumberArb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("SerialNumber")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("ContractFormId");

                    b.ToTable("tblOpContractClausesToContractFormMap");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpContractFormHead", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<string>("CompanyDetailsArb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyDetailsEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CustomerDetailsArb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerDetailsEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstPartyArb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstPartyEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("PreambleArb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreambleEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SecondPartyArb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondPartyEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TitleOfServiceArb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleOfServiceEng")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblOpContractFormHead");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpContractTemplate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("CompanyDetailsArb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyDetailsEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("CustomerDetailsArb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerDetailsEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstPartyArb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstPartyEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsForAddingResources")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsForAddingSite")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsForProject")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsForRemovingResources")
                        .HasColumnType("bit");

                    b.Property<string>("PreambleArb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreambleEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondPartyArb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondPartyEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleOfServiceArb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleOfServiceEng")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblOpContractTemplate");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpContractTemplateToContractClauseMap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ContractClauseId")
                        .HasColumnType("bigint");

                    b.Property<long>("ContractTemplateId")
                        .HasColumnType("bigint");

                    b.Property<short>("SerialNumber")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("ContractClauseId");

                    b.HasIndex("ContractTemplateId");

                    b.ToTable("tblOpContractTemplateToContractClauseMap");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpContractTermsMapToProject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("BranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ContractTerm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("date");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("isLiabilityAndInsurance")
                        .HasColumnType("bit");

                    b.Property<bool?>("isTerminationClause")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("tblOpContractTermsMapToProject");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpCustomerComplaint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ActionDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("BookedBy")
                        .HasColumnType("int");

                    b.Property<string>("BranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ClosingDate")
                        .HasColumnType("date");

                    b.Property<string>("ComplaintBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ComplaintDate")
                        .HasColumnType("date");

                    b.Property<string>("ComplaintDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsActionRequired")
                        .HasColumnType("bit");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInprogress")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ProofForAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProofForComplaint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("ReasonCode");

                    b.ToTable("tblOpCustomerComplaints");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpCustomerVisitForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ActionTerms")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("BranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ContactNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CustomerNotes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CustomerRemarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInprogress")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ReasonCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("ScheduleDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("SupervisorId")
                        .HasColumnType("int");

                    b.Property<string>("SupervisorRemarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("VisitedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VisitedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ReasonCode");

                    b.HasIndex("SupervisorId");

                    b.ToTable("tblOpCustomerVisitForm");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpEmployeeAttendance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("AltEmployeeNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AltShiftCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Attendance")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime?>("AttnDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<short?>("GeofenseOutCount")
                        .HasColumnType("smallint");

                    b.Property<TimeSpan>("InTime")
                        .HasColumnType("time");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGeofenseOut")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLate")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLogoutFromShift")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOnBreak")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("OutTime")
                        .HasColumnType("time");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<long?>("RefIdForAlt")
                        .HasColumnType("bigint");

                    b.Property<string>("ShiftCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("ShiftNumber")
                        .HasColumnType("smallint");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SkillsetCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDefShiftOff")
                        .HasColumnType("bit");

                    b.Property<bool>("isDefaultEmployee")
                        .HasColumnType("bit");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.Property<bool>("isPrimarySite")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("tblOpEmployeeAttendance");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpEmployeeLeaves", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<bool>("AL")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("AttnDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("EL")
                        .HasColumnType("bit");

                    b.Property<string>("EmployeeNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("SL")
                        .HasColumnType("bit");

                    b.Property<bool>("STL")
                        .HasColumnType("bit");

                    b.Property<string>("ShiftCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("UL")
                        .HasColumnType("bit");

                    b.Property<bool>("W")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("tblOpEmployeeLeaves");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpEmployeeToResourceMap", b =>
                {
                    b.Property<int>("MapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<long>("EmployeeID")
                        .HasColumnType("bigint");

                    b.Property<string>("EmployeeNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SkillSet")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("isPrimarySite")
                        .HasColumnType("bit");

                    b.HasKey("MapId");

                    b.ToTable("tblOpEmployeeToResourceMap");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpEmployeeTransResign", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("AttnDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("R")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("TR")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("tblOpEmployeeTransResign");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpEmployeesToProjectSite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<long>("EmployeeID")
                        .HasColumnType("bigint");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeNameAr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("tblOpEmployeesToProjectSite");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpLogisticsandvehicle", b =>
                {
                    b.Property<string>("VehicleNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<decimal>("DailyFuelCost")
                        .HasColumnType("decimal(17,3)");

                    b.Property<decimal>("DailyMiscCost")
                        .HasColumnType("decimal(17,3)");

                    b.Property<decimal>("DailyServicePrice")
                        .HasColumnType("decimal(17,3)");

                    b.Property<decimal>("EstimatedDailyMaintenanceCost")
                        .HasColumnType("decimal(17,3)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("MinMargin")
                        .HasColumnType("decimal(17,3)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<decimal>("OtherDailyOperationCost")
                        .HasColumnType("decimal(17,3)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("TotalDailyServiceCost")
                        .HasColumnType("decimal(17,3)");

                    b.Property<decimal>("ValueofVehicle")
                        .HasColumnType("decimal(17,3)");

                    b.Property<string>("VehicleNameInArabic")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("VehicleNameInEnglish")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Vehicletype")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehicleNumber");

                    b.ToTable("tblOpLogisticsandvehicle");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpMaterialEquipment", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<decimal?>("DepreciationPerYear")
                        .HasColumnType("decimal(17,3)");

                    b.Property<decimal>("EstimatedCostValue")
                        .HasColumnType("decimal(17,3)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDepreciationApplicable")
                        .HasColumnType("bit");

                    b.Property<decimal>("MinimumCostPerUsage")
                        .HasColumnType("decimal(17,3)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("NameInArabic")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NameInEnglish")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("UsageLifetermsYear")
                        .HasColumnType("smallint");

                    b.HasKey("Code");

                    b.ToTable("tblOpMaterialEquipment");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpMonthlyRoaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmployeeNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<short>("Month")
                        .HasColumnType("smallint");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S10")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S11")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S12")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S13")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S14")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S15")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S16")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S17")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S18")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S19")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S20")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S21")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S22")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S23")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S24")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S25")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S26")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("S27")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S28")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S29")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S30")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S31")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S4")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S5")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S6")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S7")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S8")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S9")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<short>("Year")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("tblOpMonthlyRoaster");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpMonthlyRoasterForSite", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<long>("EmployeeID")
                        .HasColumnType("bigint");

                    b.Property<string>("EmployeeNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsPrimaryResource")
                        .HasColumnType("bit");

                    b.Property<long>("MapId")
                        .HasColumnType("bigint");

                    b.Property<short>("Month")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("MonthEndDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("MonthStartDate")
                        .HasColumnType("date");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S10")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S11")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S12")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S13")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S14")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S15")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S16")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S17")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S18")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S19")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S20")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S21")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S22")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S23")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S24")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S25")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S26")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("S27")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S28")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S29")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S30")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S31")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S4")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S5")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S6")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S7")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S8")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("S9")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SkillsetCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SkillsetName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<short>("Year")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("tblOpMonthlyRoasterForSite");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpOperationExpenseHead", b =>
                {
                    b.Property<string>("CostHead")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CostNameInArabic")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CostNameInEnglish")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CostType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<decimal>("GrossMargin")
                        .HasColumnType("decimal(17,3)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("MinServiceCosttoCompany")
                        .HasColumnType("decimal(17,3)");

                    b.Property<decimal>("MinServicePrice")
                        .HasColumnType("decimal(17,3)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("isApplicableForFinancialExpense")
                        .HasColumnType("bit");

                    b.Property<bool>("isApplicableForMaterial")
                        .HasColumnType("bit");

                    b.Property<bool>("isApplicableForSkillset")
                        .HasColumnType("bit");

                    b.Property<bool>("isApplicableForVehicle")
                        .HasColumnType("bit");

                    b.HasKey("CostHead");

                    b.ToTable("tblOpOperationExpenseHead");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpPaymentTermsMapToProject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(17,3)");

                    b.Property<string>("BranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("date");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("InstDate")
                        .HasColumnType("date");

                    b.Property<string>("Particular")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("tblOpPaymentTermsToProject");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpProjectBudgetCosting", b =>
                {
                    b.Property<int>("ProjectBudgetCostingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ProjectBudgetEstimationId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ServiceType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ProjectBudgetCostingId");

                    b.ToTable("tblOpProjectBudgetCosting");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpProjectBudgetEstimation", b =>
                {
                    b.Property<int>("ProjectBudgetEstimationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("PreviousEstimatonId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ProjectBudgetEstimationId");

                    b.ToTable("tblOpProjectBudgetEstimation");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpProjectFinancialExpenseCosting", b =>
                {
                    b.Property<int>("FinancialExpenseCostingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("CostPerUnit")
                        .HasColumnType("decimal(17,3)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("FinancialExpenseCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ProjectBudgetCostingId")
                        .HasColumnType("int");

                    b.HasKey("FinancialExpenseCostingId");

                    b.ToTable("tblOpProjectFinancialExpenseCosting");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpProjectLogisticsCosting", b =>
                {
                    b.Property<int>("LogisticsCostingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("CostPerUnit")
                        .HasColumnType("decimal(17,3)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<decimal>("Margin")
                        .HasColumnType("decimal(17,3)");

                    b.Property<int>("ProjectBudgetCostingId")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VehicleNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("LogisticsCostingId");

                    b.ToTable("tblOpProjectLogisticsCosting");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpProjectLogisticsSubCosting", b =>
                {
                    b.Property<int>("LogisticsSubCostingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(17,3)");

                    b.Property<string>("CostHead")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("LogisticsCostingId")
                        .HasColumnType("int");

                    b.HasKey("LogisticsSubCostingId");

                    b.ToTable("tblOpProjectLogisticsSubCosting");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpProjectMaterialEquipmentCosting", b =>
                {
                    b.Property<int>("MaterialEquipmentCostingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("CostPerUnit")
                        .HasColumnType("decimal(17,3)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("MaterialEquipmentCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ProjectBudgetCostingId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("MaterialEquipmentCostingId");

                    b.ToTable("tblOpProjectMaterialEquipmentCosting");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpProjectMaterialEquipmentSubCosting", b =>
                {
                    b.Property<int>("MaterialEquipmentSubCostingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(17,3)");

                    b.Property<string>("CostHead")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("MaterialEquipmentCostingId")
                        .HasColumnType("int");

                    b.HasKey("MaterialEquipmentSubCostingId");

                    b.ToTable("tblOpProjectMaterialEquipmentSubCosting");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpProjectResourceCosting", b =>
                {
                    b.Property<int>("ResourceCostingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("CostPerUnit")
                        .HasColumnType("decimal(17,3)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<decimal>("Margin")
                        .HasColumnType("decimal(17,3)");

                    b.Property<int>("ProjectBudgetCostingId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SkillsetCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ResourceCostingId");

                    b.ToTable("tblOpProjectResourceCosting");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpProjectResourceSubCosting", b =>
                {
                    b.Property<int>("ResourceSubCostingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(17,3)");

                    b.Property<string>("CostHead")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("ResourceCostingId")
                        .HasColumnType("int");

                    b.HasKey("ResourceSubCostingId");

                    b.ToTable("tblOpProjectResourceSubCosting");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpProjectSites", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("ActualEndDate")
                        .HasColumnType("date");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<int?>("FileUploadBy")
                        .HasColumnType("int");

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdendum")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConvertedToProposal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConvrtedToContract")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEstimationCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExpenceOverheadsAssigned")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInProgress")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLogisticsAssigned")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMaterialAssigned")
                        .HasColumnType("bit");

                    b.Property<bool>("IsResourcesAssigned")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShiftsAssigned")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSkillSetsMapped")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuspended")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ProjectNameArb")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProjectNameEng")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<short?>("SiteWorkingHours")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("tblOpProjectSites");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpProposalCosting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsForAdendum")
                        .HasColumnType("bit");

                    b.Property<string>("ItemArab")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(17,3)");

                    b.Property<int>("ProjectBudgetEstimationId")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<string>("SiteCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillSetCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(17,3)");

                    b.HasKey("Id");

                    b.ToTable("tblOpProposalCosting");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpProposalTemplate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Commercial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommercialArb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoveringLetter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoveringLetterArb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("IssuingAuthority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssuingAuthorityArb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotesArb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TitleOfService")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleOfServiceArb")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblOpProposalTemplate");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpPvAddResource", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("AddResReqHeadId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerUnit")
                        .HasColumnType("decimal(17,3)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<string>("SkillsetCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("tblOpPvAddResource");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpPvAddResourceEmployeeToResourceMap", b =>
                {
                    b.Property<long>("MapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("DefShift")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmployeeNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("FileUploadBy")
                        .HasColumnType("int");

                    b.Property<string>("FileUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("date");

                    b.Property<short>("OffDay")
                        .HasColumnType("smallint");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<long>("PvAddResReqId")
                        .HasColumnType("bigint");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SkillSet")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("date");

                    b.HasKey("MapId");

                    b.ToTable("tblOpPvAddResourceEmployeeToResourceMap");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpPvAddResourceReqHead", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("FileUploadBy")
                        .HasColumnType("int");

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmpMapped")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMerged")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("tblOpPvAddResourceReqHead");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpPvOpenCloseReq", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("EffectiveDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ExtensionDate")
                        .HasColumnType("date");

                    b.Property<int?>("FileUploadBy")
                        .HasColumnType("int");

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCancelReq")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCloseReq")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExtendProjReq")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReOpenReq")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRevokeSuspReq")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuspendReq")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("tblOpPvOpenCloseReq");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpPvRemoveResourceReq", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmployeeNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("FileUploadBy")
                        .HasColumnType("int");

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMerged")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("tblOpPvRemoveResourceReq");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpPvReplaceResourceReq", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("FileUploadBy")
                        .HasColumnType("int");

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMerged")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ReplacedEmployeeNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ResignedEmployeeNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("tblOpPvReplaceResourceReq");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpPvSwapEmployeesReq", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("DestCustomerCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DestEmployeeNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DestProjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DestSiteCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("FileUploadBy")
                        .HasColumnType("int");

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMerged")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("SrcCustomerCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SrcEmployeeNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SrcProjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SrcSiteCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("tblOpPvSwapEmployeesReq");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpPvTransferResourceReq", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("DestCustomerCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DestProjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DestSiteCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmployeeNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("FileUploadBy")
                        .HasColumnType("int");

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMerged")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("SrcCustomerCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SrcProjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SrcSiteCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("tblOpPvTransferResourceReq");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpPvTransferWithReplacementReq", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("DestCustomerCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DestEmployeeNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DestProjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DestSiteCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("FileUploadBy")
                        .HasColumnType("int");

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMerged")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("SrcCustomerCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SrcEmployeeNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SrcProjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SrcSiteCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("tblOpPvTransferWithReplacementReq");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpReasonCode", b =>
                {
                    b.Property<string>("ReasonCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("DescriptionArb")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DescriptionEng")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsForCustomerComplaint")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsForCustomerVisit")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("ReasonCodeNameArb")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReasonCodeNameEng")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ReasonCode");

                    b.ToTable("tblOpReasonCode");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpShiftsPlanForProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ShiftCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("tblOpShiftsPlanForProject");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpSkillset", b =>
                {
                    b.Property<string>("SkillSetCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("CostToCompanyDay")
                        .HasColumnType("decimal(17,3)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("DetailsOfSkillSet")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<short>("MinBufferResource")
                        .HasColumnType("smallint");

                    b.Property<decimal>("MinMarginRequired")
                        .HasColumnType("decimal(17,3)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<decimal>("MonthlyCtc")
                        .HasColumnType("decimal(17,3)");

                    b.Property<decimal>("MonthlyOtherOverHeads")
                        .HasColumnType("decimal(17,3)");

                    b.Property<decimal>("MonthlyOverheadCost")
                        .HasColumnType("decimal(17,3)");

                    b.Property<string>("NameInArabic")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NameInEnglish")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("OverrideMarginIfRequired")
                        .HasColumnType("bit");

                    b.Property<short>("PrioryImportanceScale")
                        .HasColumnType("smallint");

                    b.Property<string>("ResponsibilitiesRoles")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("ServicePriceToCompany")
                        .HasColumnType("decimal(17,3)");

                    b.Property<string>("SkillSetType")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SkillType")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("TotalSkillsetCost")
                        .HasColumnType("decimal(17,3)");

                    b.Property<decimal>("TotalSkillsetCostDay")
                        .HasColumnType("decimal(17,3)");

                    b.HasKey("SkillSetCode");

                    b.ToTable("tblOpSkillset");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpSkillsetPlanForProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<short>("Quantity")
                        .HasColumnType("smallint");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SkillsetCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("tblOpSkillsetPlanForProject");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOprTrnApprovals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AppAuth")
                        .HasColumnType("int");

                    b.Property<string>("AppRemarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("ServiceCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ServiceType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.ToTable("tblOprTrnApprovals");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblSndDefCustomerMaster", b =>
                {
                    b.Property<string>("CustCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CrNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("CustARAc")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustARAdjAcCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustARDiscAcCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustAddress1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CustAddress2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CustAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("CustAlloChkPay")
                        .HasColumnType("bit");

                    b.Property<bool>("CustAlloCrOverride")
                        .HasColumnType("bit");

                    b.Property<bool>("CustAllowCrsale")
                        .HasColumnType("bit");

                    b.Property<bool>("CustArAcBranch")
                        .HasColumnType("bit");

                    b.Property<string>("CustArAcCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustArbName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("CustAvailCrLimit")
                        .HasColumnType("decimal(17,3)");

                    b.Property<string>("CustCatCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CustCityCode1")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CustCityCode2")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CustContact1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CustContact2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("CustCrLimit")
                        .HasColumnType("decimal(17,3)");

                    b.Property<string>("CustDefExpAcCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("CustDiscount")
                        .HasColumnType("decimal(17,3)");

                    b.Property<string>("CustEmail1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CustEmail2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("CustIsVendor")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CustLastPaidDate")
                        .HasColumnType("date");

                    b.Property<decimal>("CustLastPayAmt")
                        .HasColumnType("decimal(17,3)");

                    b.Property<DateTime>("CustLastSalesDate")
                        .HasColumnType("date");

                    b.Property<string>("CustMobile1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustMobile2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CustNameAliasAr")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CustNameAliasEn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("CustOnHold")
                        .HasColumnType("bit");

                    b.Property<decimal?>("CustOutStandBal")
                        .HasColumnType("decimal(17,3)");

                    b.Property<string>("CustPhone1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustPhone2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("CustPriceLevel")
                        .HasColumnType("smallint");

                    b.Property<short>("CustRating")
                        .HasColumnType("smallint");

                    b.Property<string>("CustSalesArea")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CustSalesRep")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("CustSetPriceLevel")
                        .HasColumnType("bit");

                    b.Property<short>("CustType")
                        .HasColumnType("smallint");

                    b.Property<string>("CustUDF1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CustUDF2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CustUDF3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("SalesTermsCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VATNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CustCode");

                    b.HasIndex("CustARAc");

                    b.HasIndex("CustARAdjAcCode");

                    b.HasIndex("CustARDiscAcCode");

                    b.HasIndex("CustArAcCode");

                    b.HasIndex("CustCatCode");

                    b.HasIndex("CustCityCode1");

                    b.HasIndex("CustCityCode2");

                    b.HasIndex("CustDefExpAcCode");

                    b.HasIndex("SalesTermsCode");

                    b.ToTable("tblSndDefCustomerMaster");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblSndDefServiceEnquiries", b =>
                {
                    b.Property<int>("EnquiryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("EnquiryNumber")
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("EstimatedPrice")
                        .HasColumnType("decimal(17,3)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAssignedSurveyor")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSurveyCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSurveyInProgress")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<decimal>("PricePerUnit")
                        .HasColumnType("decimal(17,3)");

                    b.Property<string>("ServiceCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ServiceQuantity")
                        .HasColumnType("int");

                    b.Property<string>("SiteCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StatusEnquiry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurveyorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("UnitQuantity")
                        .HasColumnType("int");

                    b.HasKey("EnquiryID");

                    b.HasIndex("EnquiryNumber");

                    b.HasIndex("ServiceCode");

                    b.HasIndex("SiteCode");

                    b.HasIndex("UnitCode");

                    b.ToTable("tblSndDefServiceEnquiries");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblSndDefServiceEnquiryHeader", b =>
                {
                    b.Property<string>("EnquiryNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("DateOfEnquiry")
                        .HasColumnType("date");

                    b.Property<DateTime>("EstimateClosingDate")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConvertedToProject")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("StusEnquiryHead")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("TotalEstPrice")
                        .HasColumnType("decimal(17,3)");

                    b.Property<string>("UserName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<short?>("Version")
                        .HasColumnType("smallint");

                    b.HasKey("EnquiryNumber");

                    b.HasIndex("CustomerCode");

                    b.ToTable("tblSndDefServiceEnquiryHeader");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblSndDefServiceMaster", b =>
                {
                    b.Property<string>("ServiceCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("ServiceNameArb")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ServiceNameEng")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SurveyFormCode")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ServiceCode");

                    b.HasIndex("SurveyFormCode");

                    b.ToTable("tblSndDefServiceMaster");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblSndDefServiceUnitMap", b =>
                {
                    b.Property<string>("ServiceCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UnitCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<decimal>("PricePerUnit")
                        .HasColumnType("decimal(17,3)");

                    b.HasKey("ServiceCode", "UnitCode");

                    b.HasIndex("UnitCode");

                    b.ToTable("tblSndDefServiceUnitMap");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblSndDefSiteMaster", b =>
                {
                    b.Property<string>("SiteCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsChildCustomer")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("SiteAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SiteArbName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SiteCityCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("SiteGeoGain")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("SiteGeoLatitude")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("SiteGeoLatitudeMeter")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("SiteGeoLongitude")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("SiteGeoLongitudeMeter")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("VATNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SiteCode");

                    b.HasIndex("CustomerCode");

                    b.HasIndex("SiteCityCode");

                    b.ToTable("tblSndDefSiteMaster");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblSndDefSurveyFormDataEntry", b =>
                {
                    b.Property<long>("EntryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("ElementArbName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ElementEngName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElementType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("EnquiryID")
                        .HasColumnType("int");

                    b.Property<string>("EntryValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ListValueString")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("MaxValue")
                        .HasColumnType("int");

                    b.Property<int?>("MinValue")
                        .HasColumnType("int");

                    b.HasKey("EntryID");

                    b.HasIndex("EnquiryID");

                    b.ToTable("tblSndDefSurveyFormDataEntry");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblSndDefSurveyFormElement", b =>
                {
                    b.Property<string>("FormElementCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("ElementArbName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ElementEngName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ElementType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ListValueString")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("MaxValue")
                        .HasColumnType("int");

                    b.Property<int?>("MinValue")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.HasKey("FormElementCode");

                    b.ToTable("tblSndDefSurveyFormElement");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblSndDefSurveyFormElementsMapp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FormElementCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SurveyFormCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("FormElementCode");

                    b.HasIndex("SurveyFormCode");

                    b.ToTable("tblSndDefSurveyFormElementsMapp");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblSndDefSurveyFormHead", b =>
                {
                    b.Property<string>("SurveyFormCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SurveyFormNameArb")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SurveyFormNameEng")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("SurveyFormCode");

                    b.ToTable("tblSndDefSurveyFormHead");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblSndDefSurveyor", b =>
                {
                    b.Property<string>("SurveyorCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("SurveyorNameArb")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SurveyorNameEng")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SurveyorCode");

                    b.HasIndex("Branch");

                    b.ToTable("tblSndDefSurveyor");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblSndDefUnitMaster", b =>
                {
                    b.Property<string>("UnitCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("UnitNameArb")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UnitNameEng")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("UnitCode");

                    b.ToTable("tblSndDefUnitMaster");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblSndDefVendorMaster", b =>
                {
                    b.Property<string>("VendCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CrNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("Iban")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("PoTermsCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VATNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VendARAc")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VendARAdjAcCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VendARDiscAcCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VendAddress1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("VendAddress2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("VendAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("VendAlloChkPay")
                        .HasColumnType("bit");

                    b.Property<bool>("VendAlloCrOverride")
                        .HasColumnType("bit");

                    b.Property<bool>("VendAllowCrsale")
                        .HasColumnType("bit");

                    b.Property<bool>("VendArAcBranch")
                        .HasColumnType("bit");

                    b.Property<string>("VendArAcCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VendArbName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("VendAvailCrLimit")
                        .HasColumnType("decimal(17,3)");

                    b.Property<string>("VendCatCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VendCityCode1")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VendCityCode2")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VendContact1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("VendContact2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("VendCrLimit")
                        .HasColumnType("decimal(12,3)");

                    b.Property<string>("VendDefExpAcCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("VendDiscount")
                        .HasColumnType("decimal(7,2)");

                    b.Property<string>("VendEmail1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("VendEmail2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("VendIsVendor")
                        .HasColumnType("bit");

                    b.Property<DateTime>("VendLastPaidDate")
                        .HasColumnType("date");

                    b.Property<decimal>("VendLastPayAmt")
                        .HasColumnType("decimal(12,3)");

                    b.Property<DateTime>("VendLastPoDate")
                        .HasColumnType("date");

                    b.Property<string>("VendMobile1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VendMobile2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VendName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("VendOnHold")
                        .HasColumnType("bit");

                    b.Property<decimal?>("VendOutStandBal")
                        .HasColumnType("decimal(17,3)");

                    b.Property<string>("VendPhone1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VendPhone2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VendPoArea")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VendPoRep")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<short>("VendPriceLevel")
                        .HasColumnType("smallint");

                    b.Property<short>("VendRating")
                        .HasColumnType("smallint");

                    b.Property<bool>("VendSetPriceLevel")
                        .HasColumnType("bit");

                    b.Property<short>("VendType")
                        .HasColumnType("smallint");

                    b.Property<string>("VendUDF1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("VendUDF2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("VendUDF3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("VendCode");

                    b.HasIndex("PoTermsCode");

                    b.HasIndex("VendARAc");

                    b.HasIndex("VendARAdjAcCode");

                    b.HasIndex("VendARDiscAcCode");

                    b.HasIndex("VendArAcCode");

                    b.HasIndex("VendCatCode");

                    b.HasIndex("VendCityCode1");

                    b.HasIndex("VendCityCode2");

                    b.HasIndex("VendDefExpAcCode");

                    b.ToTable("tblSndDefVendorMaster");
                });

            modelBuilder.Entity("CIN.Domain.PurchaseMgt.TblPopTrnGRNDetails", b =>
                {
                    b.Property<string>("TranNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("BalQty")
                        .HasColumnType("decimal(12,3)");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Closed")
                        .HasColumnType("bit");

                    b.Property<int>("CompCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<decimal>("DiscAmt")
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("DiscPer")
                        .HasColumnType("decimal(6,3)");

                    b.Property<bool>("ForeClosed")
                        .HasColumnType("bit");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("ItemTax")
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("ItemTaxPer")
                        .HasColumnType("decimal(6,3)");

                    b.Property<short>("ItemTracking")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<decimal>("POLandedCost")
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("POLandedCostPerItem")
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("POLineCost1")
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("POLineCost2")
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("POOHCostPerItem")
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("POQtyCancel")
                        .HasColumnType("decimal(12,5)");

                    b.Property<decimal>("POQtyReceived")
                        .HasColumnType("decimal(12,5)");

                    b.Property<decimal>("POQtyReceiving")
                        .HasColumnType("decimal(12,5)");

                    b.Property<decimal>("ReceivedQty")
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("ReceivingQty")
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(12,3)");

                    b.Property<DateTime>("TranDate")
                        .HasColumnType("date");

                    b.Property<string>("TranId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TranItemCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("TranItemCost")
                        .HasColumnType("decimal(12,3)");

                    b.Property<string>("TranItemName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TranItemName2")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("TranItemQty")
                        .HasColumnType("decimal(12,5)");

                    b.Property<string>("TranItemUnitCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("TranPostStatus")
                        .HasColumnType("bit");

                    b.Property<decimal>("TranTotCost")
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("TranUOMFactor")
                        .HasColumnType("decimal(12,5)");

                    b.Property<string>("TranVendorCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("TranVoidStatus")
                        .HasColumnType("bit");

                    b.Property<string>("VendCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("TranNumber");

                    b.HasIndex("BranchCode");

                    b.HasIndex("CompCode");

                    b.HasIndex("TranId");

                    b.HasIndex("TranItemCode");

                    b.HasIndex("TranItemUnitCode");

                    b.HasIndex("TranVendorCode");

                    b.HasIndex("VendCode");

                    b.ToTable("tblPopTrnGRNDetails");
                });

            modelBuilder.Entity("CIN.Domain.PurchaseMgt.TblPopTrnGRNHeader", b =>
                {
                    b.Property<string>("TranNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("BranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CancelDate")
                        .HasColumnType("date");

                    b.Property<bool>("Closed")
                        .HasColumnType("bit");

                    b.Property<int>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<int>("CompCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("date");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("ExRate")
                        .HasColumnType("decimal(10,5)");

                    b.Property<bool>("ForeClosed")
                        .HasColumnType("bit");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("InvRefNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<decimal>("OHCharges")
                        .HasColumnType("decimal(12,3)");

                    b.Property<DateTime>("POClosedDate")
                        .HasColumnType("date");

                    b.Property<string>("PONotes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PaymentID")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PurchaseOrderNO")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PurchaseRequestNO")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RFQContractNum")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TAXId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("TaxInclusive")
                        .HasColumnType("smallint");

                    b.Property<decimal>("Taxes")
                        .HasColumnType("decimal(12,3)");

                    b.Property<string>("TranBuyer")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TranCreateUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("TranCreateUserDate")
                        .HasColumnType("date");

                    b.Property<int>("TranCurrencyCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("TranDate")
                        .HasColumnType("date");

                    b.Property<decimal>("TranDiscAmount")
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("TranDiscPer")
                        .HasColumnType("decimal(6,3)");

                    b.Property<DateTime>("TranLastEditDate")
                        .HasColumnType("date");

                    b.Property<int>("TranLastEditUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("TranPostDate")
                        .HasColumnType("date");

                    b.Property<bool>("TranPostStatus")
                        .HasColumnType("bit");

                    b.Property<string>("TranShipMode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("TranTotalCost")
                        .HasColumnType("decimal(12,3)");

                    b.Property<bool>("TranVoidStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("TranVoidUser")
                        .HasColumnType("date");

                    b.Property<int>("TranpostUser")
                        .HasColumnType("int");

                    b.Property<string>("Trantype")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("TranvoidDate")
                        .HasColumnType("int");

                    b.Property<string>("VenCatCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VendCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("WHCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("TranNumber");

                    b.HasIndex("BranchCode");

                    b.HasIndex("ClosedBy");

                    b.HasIndex("CompCode");

                    b.HasIndex("PaymentID");

                    b.HasIndex("TranCreateUser");

                    b.HasIndex("TranCurrencyCode");

                    b.HasIndex("TranLastEditUser");

                    b.HasIndex("TranShipMode");

                    b.HasIndex("TranpostUser");

                    b.HasIndex("TranvoidDate");

                    b.HasIndex("VendCode");

                    b.ToTable("tblPopTrnGRNHeader");
                });

            modelBuilder.Entity("CIN.Domain.PurchaseMgt.TblPopTrnPurchaseOrderDetails", b =>
                {
                    b.Property<string>("TranNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Closed")
                        .HasColumnType("bit");

                    b.Property<int>("CompCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<decimal>("DiscAmt")
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("DiscPer")
                        .HasColumnType("decimal(6,3)");

                    b.Property<bool>("ForeClosed")
                        .HasColumnType("bit");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGrn")
                        .HasColumnType("bit");

                    b.Property<decimal>("ItemTax")
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("ItemTaxPer")
                        .HasColumnType("decimal(6,3)");

                    b.Property<short>("ItemTracking")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<decimal>("POLandedCost")
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("POLandedCostPerItem")
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("POLineCost1")
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("POLineCost2")
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("POOHCostPerItem")
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("POQtyCancel")
                        .HasColumnType("decimal(12,5)");

                    b.Property<decimal>("POQtyReceived")
                        .HasColumnType("decimal(12,5)");

                    b.Property<decimal>("POQtyReceiving")
                        .HasColumnType("decimal(12,5)");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(12,3)");

                    b.Property<DateTime>("TranDate")
                        .HasColumnType("date");

                    b.Property<string>("TranId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TranItemCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("TranItemCost")
                        .HasColumnType("decimal(12,3)");

                    b.Property<string>("TranItemName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TranItemName2")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("TranItemQty")
                        .HasColumnType("decimal(12,5)");

                    b.Property<string>("TranItemUnitCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("TranPostStatus")
                        .HasColumnType("bit");

                    b.Property<decimal>("TranTotCost")
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("TranUOMFactor")
                        .HasColumnType("decimal(12,5)");

                    b.Property<string>("TranVendorCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("TranVoidStatus")
                        .HasColumnType("bit");

                    b.Property<string>("VendCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("TranNumber");

                    b.HasIndex("BranchCode");

                    b.HasIndex("CompCode");

                    b.HasIndex("TranId");

                    b.HasIndex("TranItemCode");

                    b.HasIndex("TranItemUnitCode");

                    b.HasIndex("TranVendorCode");

                    b.HasIndex("VendCode");

                    b.ToTable("tblPopTrnPurchaseOrderDetails");
                });

            modelBuilder.Entity("CIN.Domain.PurchaseMgt.TblPopTrnPurchaseOrderHeader", b =>
                {
                    b.Property<string>("TranNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("BranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CancelDate")
                        .HasColumnType("date");

                    b.Property<bool>("Closed")
                        .HasColumnType("bit");

                    b.Property<int>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<int>("CompCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("date");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("ExRate")
                        .HasColumnType("decimal(10,5)");

                    b.Property<bool>("ForeClosed")
                        .HasColumnType("bit");

                    b.Property<bool>("ISGRN")
                        .HasColumnType("bit");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("InvRefNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<decimal>("OHCharges")
                        .HasColumnType("decimal(12,3)");

                    b.Property<DateTime>("POClosedDate")
                        .HasColumnType("date");

                    b.Property<string>("PONotes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PaymentID")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PurchaseOrderNO")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PurchaseRequestNO")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RFQContractNum")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TAXId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("TaxInclusive")
                        .HasColumnType("smallint");

                    b.Property<decimal>("Taxes")
                        .HasColumnType("decimal(12,3)");

                    b.Property<string>("TranBuyer")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TranCreateUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("TranCreateUserDate")
                        .HasColumnType("date");

                    b.Property<int>("TranCurrencyCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("TranDate")
                        .HasColumnType("date");

                    b.Property<decimal>("TranDiscAmount")
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("TranDiscPer")
                        .HasColumnType("decimal(6,3)");

                    b.Property<DateTime>("TranLastEditDate")
                        .HasColumnType("date");

                    b.Property<int>("TranLastEditUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("TranPostDate")
                        .HasColumnType("date");

                    b.Property<bool>("TranPostStatus")
                        .HasColumnType("bit");

                    b.Property<string>("TranShipMode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("TranTotalCost")
                        .HasColumnType("decimal(12,3)");

                    b.Property<bool>("TranVoidStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("TranVoidUser")
                        .HasColumnType("date");

                    b.Property<int>("TranpostUser")
                        .HasColumnType("int");

                    b.Property<string>("Trantype")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("TranvoidDate")
                        .HasColumnType("int");

                    b.Property<string>("VenCatCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VendCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("WHCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("TranNumber");

                    b.HasIndex("BranchCode");

                    b.HasIndex("ClosedBy");

                    b.HasIndex("CompCode");

                    b.HasIndex("PaymentID");

                    b.HasIndex("TranCreateUser");

                    b.HasIndex("TranCurrencyCode");

                    b.HasIndex("TranLastEditUser");

                    b.HasIndex("TranShipMode");

                    b.HasIndex("TranpostUser");

                    b.HasIndex("TranvoidDate");

                    b.HasIndex("VendCode");

                    b.ToTable("tblPopTrnPurchaseOrderHeader");
                });

            modelBuilder.Entity("CIN.Domain.PurchaseMgt.TblPopTrnPurchaseReturnDetails", b =>
                {
                    b.Property<string>("TranNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("BalQty")
                        .HasColumnType("decimal(12,3)");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Closed")
                        .HasColumnType("bit");

                    b.Property<int>("CompCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<decimal>("DiscAmt")
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("DiscPer")
                        .HasColumnType("decimal(6,3)");

                    b.Property<bool>("ForeClosed")
                        .HasColumnType("bit");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("ItemTax")
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("ItemTaxPer")
                        .HasColumnType("decimal(6,3)");

                    b.Property<short>("ItemTracking")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<decimal>("POLandedCost")
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("POLandedCostPerItem")
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("POLineCost1")
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("POLineCost2")
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("POOHCostPerItem")
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("POQtyCancel")
                        .HasColumnType("decimal(12,5)");

                    b.Property<decimal>("POQtyReceived")
                        .HasColumnType("decimal(12,5)");

                    b.Property<decimal>("POQtyReceiving")
                        .HasColumnType("decimal(12,5)");

                    b.Property<decimal>("ReceivedQty")
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("ReceivingQty")
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("ReturnedQty")
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(12,3)");

                    b.Property<DateTime>("TranDate")
                        .HasColumnType("date");

                    b.Property<string>("TranId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TranItemCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("TranItemCost")
                        .HasColumnType("decimal(12,3)");

                    b.Property<string>("TranItemName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TranItemName2")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("TranItemQty")
                        .HasColumnType("decimal(12,5)");

                    b.Property<string>("TranItemUnitCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("TranPostStatus")
                        .HasColumnType("bit");

                    b.Property<decimal>("TranTotCost")
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("TranUOMFactor")
                        .HasColumnType("decimal(12,5)");

                    b.Property<string>("TranVendorCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("TranVoidStatus")
                        .HasColumnType("bit");

                    b.Property<string>("VendCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("TranNumber");

                    b.HasIndex("BranchCode");

                    b.HasIndex("CompCode");

                    b.HasIndex("TranId");

                    b.HasIndex("TranItemCode");

                    b.HasIndex("TranItemUnitCode");

                    b.HasIndex("TranVendorCode");

                    b.HasIndex("VendCode");

                    b.ToTable("tblPopTrnPurchaseReturnDetails");
                });

            modelBuilder.Entity("CIN.Domain.PurchaseMgt.TblPopTrnPurchaseReturnHeader", b =>
                {
                    b.Property<string>("TranNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("BranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CancelDate")
                        .HasColumnType("date");

                    b.Property<bool>("Closed")
                        .HasColumnType("bit");

                    b.Property<int>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<int>("CompCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("date");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("ExRate")
                        .HasColumnType("decimal(10,5)");

                    b.Property<bool>("ForeClosed")
                        .HasColumnType("bit");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("InvRefNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<decimal>("OHCharges")
                        .HasColumnType("decimal(12,3)");

                    b.Property<DateTime>("POClosedDate")
                        .HasColumnType("date");

                    b.Property<string>("PONotes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PaymentID")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PurchaseReturnNO")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RFQContractNum")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TAXId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("TaxInclusive")
                        .HasColumnType("smallint");

                    b.Property<decimal>("Taxes")
                        .HasColumnType("decimal(12,3)");

                    b.Property<string>("TranBuyer")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TranCreateUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("TranCreateUserDate")
                        .HasColumnType("date");

                    b.Property<int>("TranCurrencyCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("TranDate")
                        .HasColumnType("date");

                    b.Property<decimal>("TranDiscAmount")
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("TranDiscPer")
                        .HasColumnType("decimal(6,3)");

                    b.Property<DateTime>("TranLastEditDate")
                        .HasColumnType("date");

                    b.Property<int>("TranLastEditUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("TranPostDate")
                        .HasColumnType("date");

                    b.Property<bool>("TranPostStatus")
                        .HasColumnType("bit");

                    b.Property<string>("TranShipMode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("TranTotalCost")
                        .HasColumnType("decimal(12,3)");

                    b.Property<bool>("TranVoidStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("TranVoidUser")
                        .HasColumnType("date");

                    b.Property<int>("TranpostUser")
                        .HasColumnType("int");

                    b.Property<string>("Trantype")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("TranvoidDate")
                        .HasColumnType("int");

                    b.Property<string>("VenCatCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VendCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("WHCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("TranNumber");

                    b.HasIndex("BranchCode");

                    b.HasIndex("ClosedBy");

                    b.HasIndex("CompCode");

                    b.HasIndex("PaymentID");

                    b.HasIndex("TranCreateUser");

                    b.HasIndex("TranCurrencyCode");

                    b.HasIndex("TranLastEditUser");

                    b.HasIndex("TranShipMode");

                    b.HasIndex("TranpostUser");

                    b.HasIndex("TranvoidDate");

                    b.HasIndex("VendCode");

                    b.ToTable("tblPopTrnPurchaseReturnHeader");
                });

            modelBuilder.Entity("CIN.Domain.PurchaseMgt.TblPurAuthorities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AppAuth")
                        .HasColumnType("int");

                    b.Property<short>("AppLevel")
                        .HasColumnType("smallint");

                    b.Property<string>("BranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<bool>("PurchaseOrder")
                        .HasColumnType("bit");

                    b.Property<bool>("PurchaseRequest")
                        .HasColumnType("bit");

                    b.Property<bool>("PurchaseReturn")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("tblPurAuthorities");
                });

            modelBuilder.Entity("CIN.Domain.PurchaseMgt.TblPurTrnApprovals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AppAuth")
                        .HasColumnType("int");

                    b.Property<string>("AppRemarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("ServiceCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ServiceType")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.ToTable("tblPurTrnApprovals");
                });

            modelBuilder.Entity("CIN.Domain.PurchaseMgt.TblTranPurcInvoice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<decimal?>("AmountBeforeTax")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("AmountDue")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("BranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("CreditNumber")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("InvoiceDueDate")
                        .HasColumnType("date");

                    b.Property<string>("InvoiceModule")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("InvoiceNotes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("InvoiceRefNumber")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("InvoiceStatus")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("InvoiceStatusId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCreditConverted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDefaultConfig")
                        .HasColumnType("bit");

                    b.Property<string>("LpoContract")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PaymentTerms")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ServiceDate1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SpCreditNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TaxAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("TaxIdNumber")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TotalPayment")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("VatPercentage")
                        .HasColumnType("decimal(18,3)");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.HasIndex("PaymentTerms");

                    b.ToTable("TblTranPurcInvoice");
                });

            modelBuilder.Entity("CIN.Domain.PurchaseMgt.TblTranPurcInvoiceItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<decimal?>("AmountBeforeTax")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<long?>("CreditId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreditMemoId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreditNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("DebitMemoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<short?>("Discount")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<bool?>("IsDefaultConfig")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TaxAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TaxTariffPercentage")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("CreditId");

                    b.HasIndex("ItemCode");

                    b.ToTable("TblTranPurcInvoiceItem");
                });

            modelBuilder.Entity("CIN.Domain.PurchaseSetup.TblInvDefPurchaseConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("AutoGenCustCode")
                        .HasColumnType("bit");

                    b.Property<short>("CategoryLength")
                        .HasColumnType("smallint");

                    b.Property<string>("NewCustIndicator")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("PrefixCatCode")
                        .HasColumnType("bit");

                    b.Property<short>("VendLength")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("tblInvDefPurchaseConfig");
                });

            modelBuilder.Entity("CIN.Domain.PurchaseSetup.TblPopDefVendorCategory", b =>
                {
                    b.Property<string>("VenCatCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CatPrefix")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LastSeq")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("VenCatDesc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VenCatName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("VenCatCode");

                    b.ToTable("tblPopDefVendorCategory");
                });

            modelBuilder.Entity("CIN.Domain.PurchaseSetup.TblPopDefVendorPOTermsCode", b =>
                {
                    b.Property<string>("POTermsCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<short>("POTermDiscDays")
                        .HasColumnType("smallint");

                    b.Property<string>("POTermsDesc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("POTermsDueDays")
                        .HasColumnType("smallint");

                    b.Property<string>("POTermsName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("POTermsCode");

                    b.ToTable("tblPopDefVendorPOTermsCode");
                });

            modelBuilder.Entity("CIN.Domain.PurchaseSetup.TblPopDefVendorShipment", b =>
                {
                    b.Property<string>("ShipmentCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("ShipmentDesc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShipmentName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShipmentType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ShipmentCode");

                    b.ToTable("tblPopDefVendorShipment");
                });

            modelBuilder.Entity("CIN.Domain.SND.TblSndAuthorities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AppAuth")
                        .HasColumnType("int");

                    b.Property<short>("AppLevel")
                        .HasColumnType("smallint");

                    b.Property<string>("BranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("CanApproveSndInvoice")
                        .HasColumnType("bit");

                    b.Property<bool>("CanApproveSndQuotation")
                        .HasColumnType("bit");

                    b.Property<bool>("CanConvertSndDeliveryNoteToInvoice")
                        .HasColumnType("bit");

                    b.Property<bool>("CanConvertSndQuotationToDeliveryNote")
                        .HasColumnType("bit");

                    b.Property<bool>("CanConvertSndQuotationToInvoice")
                        .HasColumnType("bit");

                    b.Property<bool>("CanConvertSndQuotationToOrder")
                        .HasColumnType("bit");

                    b.Property<bool>("CanCreateSndInvoice")
                        .HasColumnType("bit");

                    b.Property<bool>("CanCreateSndQuotation")
                        .HasColumnType("bit");

                    b.Property<bool>("CanEditSndInvoice")
                        .HasColumnType("bit");

                    b.Property<bool>("CanEditSndQuotation")
                        .HasColumnType("bit");

                    b.Property<bool>("CanPostSndInvoice")
                        .HasColumnType("bit");

                    b.Property<bool>("CanReviseSndQuotation")
                        .HasColumnType("bit");

                    b.Property<bool>("CanSettleSndInvoice")
                        .HasColumnType("bit");

                    b.Property<bool>("CanVoidSndInvoice")
                        .HasColumnType("bit");

                    b.Property<bool>("CanVoidSndQuotation")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<bool>("IsFinalAuthority")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("AppAuth");

                    b.HasIndex("BranchCode");

                    b.ToTable("tblSndAuthorities");
                });

            modelBuilder.Entity("CIN.Domain.SND.TblSndTrnApprovals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AppAuth")
                        .HasColumnType("int");

                    b.Property<string>("AppRemarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("ServiceCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<short>("ServiceType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("AppAuth");

                    b.HasIndex("BranchCode");

                    b.ToTable("tblSndTrnApprovals");
                });

            modelBuilder.Entity("CIN.Domain.SalesSetup.TblInvDefSalesConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("AutoGenCustCode")
                        .HasColumnType("bit");

                    b.Property<short>("CategoryLength")
                        .HasColumnType("smallint");

                    b.Property<short>("CustLength")
                        .HasColumnType("smallint");

                    b.Property<string>("NewCustIndicator")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("PrefixCatCode")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("tblInvDefSalesConfig");
                });

            modelBuilder.Entity("CIN.Domain.SalesSetup.TblSndDefCustomerCategory", b =>
                {
                    b.Property<string>("CustCatCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CatPrefix")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("CustCatDesc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustCatName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LastSeq")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.HasKey("CustCatCode");

                    b.ToTable("tblSndDefCustomerCategory");
                });

            modelBuilder.Entity("CIN.Domain.SalesSetup.TblSndDefSalesShipment", b =>
                {
                    b.Property<string>("ShipmentCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<string>("ShipmentDesc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShipmentName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShipmentType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ShipmentCode");

                    b.ToTable("tblSndDefSalesShipment");
                });

            modelBuilder.Entity("CIN.Domain.SalesSetup.TblSndDefSalesTermsCode", b =>
                {
                    b.Property<string>("SalesTermsCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.Property<short>("SalesTermDiscDays")
                        .HasColumnType("smallint");

                    b.Property<string>("SalesTermsDesc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("SalesTermsDueDays")
                        .HasColumnType("smallint");

                    b.Property<string>("SalesTermsName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SalesTermsCode");

                    b.ToTable("tblSndDefSalesTermsCode");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblDefSchoolExaminationManagementDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("EndingDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExamHeaderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartingDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubjectCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("tblDefSchoolExaminationManagementDetails");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblDefSchoolExaminationManagementHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfCompletion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfResult")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GradeCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsResultDeclared")
                        .HasColumnType("bit");

                    b.Property<int>("PreparedBy")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypeOfExaminationCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("tblDefSchoolExaminationManagementHeader");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblDefSchoolStudentMaster", b =>
                {
                    b.Property<string>("StuRegNum")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AcademicYear")
                        .HasColumnType("int");

                    b.Property<int>("AcademicsScale")
                        .HasColumnType("int");

                    b.Property<string>("AdmissionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AttentivenessScale")
                        .HasColumnType("int");

                    b.Property<string>("BloodGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateofAdmission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateofBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiciplineAttitude")
                        .HasColumnType("int");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeeStructCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenderCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GradeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GradeSectionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("HomeWorkScale")
                        .HasColumnType("int");

                    b.Property<string>("IDNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Image1Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image2Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LangCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherToungue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PAddress1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PTGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhysicalDisability")
                        .HasColumnType("bit");

                    b.Property<string>("PhysicalDisabilityNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PickNDropZone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectWorkScale")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisteredPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReligionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortListDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortListedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignatureImage1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignatureImage2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SpecialAssistance")
                        .HasColumnType("bit");

                    b.Property<string>("SpecialAssistanceNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SportsPhysicalScale")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StuAdmDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StuAdmNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StuConvBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StuConvDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StuIDNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StuName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StuName2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StuRegDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TaxApplicable")
                        .HasColumnType("bit");

                    b.Property<decimal>("TransportationFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("TransportationRequired")
                        .HasColumnType("bit");

                    b.Property<string>("VehicleTransport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("WearSpects")
                        .HasColumnType("bit");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StuRegNum");

                    b.ToTable("tblDefSchoolStudentMaster");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblDefSchoolStudentResultDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("MarksObtained")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MaximumMarks")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("QualifiyingGrade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("QualifiyingMarks")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("StudentAdmNumber")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("StudentResultHeaderId")
                        .HasColumnType("int");

                    b.Property<string>("SubCodes")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("tblDefSchoolStudentResultDetails");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblDefSchoolStudentResultHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<string>("GradeCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsRelease")
                        .HasColumnType("bit");

                    b.Property<string>("ReleasedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ResultDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("tblDefSchoolStudentResultHeader");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblDefSchoolSubjectExamsGrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("GradeCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("MaximumMarks")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinimumMarks")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("QualifiyingGrade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("tblDefSchoolSubjectExamsGrade");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblDefSchoolTeacherClassMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("GradeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMapped")
                        .HasColumnType("bit");

                    b.Property<string>("SectionCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TeacherCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("tblDefSchoolTeacherClassMapping");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblDefSchoolTeacherLanguages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Read")
                        .HasColumnType("int");

                    b.Property<int>("Speak")
                        .HasColumnType("int");

                    b.Property<string>("TeacherCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Write")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tblDefSchoolTeacherLanguages");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblDefSchoolTeacherMaster", b =>
                {
                    b.Property<string>("TeacherCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AboutTeacher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdministrativeSkills")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ComminicationSkills")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateJoin")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisciplineSkills")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("FatherName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FullImageParh")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("HighestQualification")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("HiringType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("MaritalStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NationalityCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NationalityID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PAddress")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PMobile1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PPhone1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Passport")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Pcity")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PrimaryBranchCode")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SMobile2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SPhone2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Saddress")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SpouseName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Subjectknowledge")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("SysLoginId")
                        .HasColumnType("int");

                    b.Property<string>("TeacherEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeacherName1")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("TeacherName2")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("TeacherShortName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TeachingSkills")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("TechnologyCompetence")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ThumbNailImagePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TotalExperience")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TeacherCode");

                    b.ToTable("tblDefSchoolTeacherMaster");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblDefSchoolTeacherQualification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Institute")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Percentage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeacherCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblDefSchoolTeacherQualification");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblDefSchoolTeacherSubjectsMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AdminSkillLevel")
                        .HasColumnType("int");

                    b.Property<string>("GradeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeacherCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("TeachingSkillLevel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tblDefSchoolTeacherSubjectsMapping");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblDefStudentAcademics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AcademicYear")
                        .HasColumnType("int");

                    b.Property<string>("ExamDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExamName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassPercent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StuAdmNum")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblDefStudentAcademics");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblDefStudentAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BuildingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PAddress1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StuAdmNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblDefStudentAddress");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblDefStudentAttendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AcademicYear")
                        .HasColumnType("int");

                    b.Property<DateTime>("AtnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AtnFlag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AtnTimeIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("AtnTimeOut")
                        .HasColumnType("datetime2");

                    b.Property<string>("IsLeave")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaveCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StuAdmNum")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblDefStudentAttendance");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblDefStudentFeeDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AcademicYear")
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscPer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FeeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FeeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeeStructCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAddedManaully")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLateFee")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVoided")
                        .HasColumnType("bit");

                    b.Property<decimal>("MaxDiscPer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetDiscAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetFeeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StuAdmNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TaxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TermCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoidReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoidedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblDefStudentFeeDetails");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblDefStudentFeeHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AcademicYear")
                        .HasColumnType("int");

                    b.Property<decimal>("DiscAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DiscReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FeeDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeeStructCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCompletelyPaid")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<string>("JvNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NetFeeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("PaidOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaidRemarks1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaidRemarks2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaidTransNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StuAdmNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TermCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotFeeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("tblDefStudentFeeHeader");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblDefStudentGuardiansSiblings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Deisgnation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_Ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RelationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StuAdmNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblDefStudentGuardiansSiblings");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblDefStudentNotices", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionItems")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionTaken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClosedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ClosedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description_Ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("IsClosed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NoticeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PosNeg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StuAdmNum")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblDefStudentNotices");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblDefStudentNoticesReasonCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ReasonCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonName1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonName2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RequireAction")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("tblDefStudentNoticesReasonCode");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblDefStudentPrevEducation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BoardName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassStudied")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageMedium")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOfInstitute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassPercentage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StuAdmNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearofPassing")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tblDefStudentPrevEducation");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblLessonPlanDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("ActEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActHrs")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("ActStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActualTecherCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AssignTeacherCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Chapter")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<TimeSpan?>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("EstDays")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("EstEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EstHrs")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("EstStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GradeCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LessonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LessonName2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LessonPlanCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NumOfSessions")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SectionCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<TimeSpan?>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("SubCodes")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Topics")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Topics2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblLessonPlanDetails");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblLessonPlanHeader", b =>
                {
                    b.Property<string>("LessonPlanCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BranchCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("EstEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EstStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GradeCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("NumOfDays")
                        .HasColumnType("int");

                    b.Property<int>("NumOfLessons")
                        .HasColumnType("int");

                    b.Property<string>("SectionCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SubCodes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeacherCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("LessonPlanCode");

                    b.ToTable("tblLessonPlanHeader");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblParentAddRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AddedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdded")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisteredEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisteredMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StuAdmNum")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblParentAddRequest");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblParentMyGallery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description_Ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVedio")
                        .HasColumnType("bit");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisterMobile")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("tblParentMyGallery");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSchoolMessages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Mobile")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReadDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ReadFlag")
                        .HasColumnType("bit");

                    b.Property<string>("SentBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblSchoolMessages");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSchoolTranInvoice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<decimal?>("AmountBeforeTax")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("AmountDue")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("BranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CustArbName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CustName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("InvoiceDueDate")
                        .HasColumnType("date");

                    b.Property<string>("InvoiceModule")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("InvoiceNotes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("InvoiceRefNumber")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("InvoiceStatus")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("InvoiceStatusId")
                        .HasColumnType("int");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCreditConverted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDefaultConfig")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSettled")
                        .HasColumnType("bit");

                    b.Property<string>("LpoContract")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PaymentTerms")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ServiceDate1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SpInvoiceNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TaxAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("TaxIdNumber")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TotalPayment")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("VatPercentage")
                        .HasColumnType("decimal(18,3)");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.HasIndex("PaymentTerms");

                    b.ToTable("tblSchoolTranInvoice");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSchoolTranInvoiceItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<decimal?>("AmountBeforeTax")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<long?>("CreditMemoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DebitMemoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<short?>("Discount")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<long?>("InvoiceId")
                        .HasColumnType("bigint");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short?>("InvoiceType")
                        .HasColumnType("smallint");

                    b.Property<bool?>("IsDefaultConfig")
                        .HasColumnType("bit");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TaxAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TaxTariffPercentage")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("tblSchoolTranInvoiceItem");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblStudentAttnRegDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AttnFlag")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("AttnRegHeaderId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("InTime")
                        .HasColumnType("time");

                    b.Property<bool>("IsLeave")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPresent")
                        .HasColumnType("bit");

                    b.Property<TimeSpan?>("OutTime")
                        .HasColumnType("time");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentAdmNumber")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("tblStudentAttnRegDetails");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblStudentAttnRegHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("AttnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GradeCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("bit");

                    b.Property<string>("SectionCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TeacherCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TblStudentAttnRegHeader");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblStudentHomeWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("GradeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeWorkDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeWorkDescription_Ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HomeworkDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCodes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeacherCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblStudentHomeWork");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSysNotificaticationTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Template_Ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Template_En")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblSysNotificaticationTemplate");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSysSchooScheduleEvents", b =>
                {
                    b.Property<DateTime>("HDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EventCreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EventCreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventDescriptionAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventNameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FromTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("NotesOnEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ToTime")
                        .HasColumnType("datetime2");

                    b.HasKey("HDate");

                    b.ToTable("tblSysSchooScheduleEvents");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSysSchoolAcademicBatches", b =>
                {
                    b.Property<int>("AcademicYear")
                        .HasColumnType("int");

                    b.Property<DateTime>("AcademicEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("AcademicStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.HasKey("AcademicYear");

                    b.ToTable("tblSysSchoolAcademicBatches");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSysSchoolAcademicsSubects", b =>
                {
                    b.Property<string>("SubCodes")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("SubName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubName2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubCodes");

                    b.ToTable("tblSysSchoolAcademicsSubects");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSysSchoolAcedemicClassGrade", b =>
                {
                    b.Property<string>("GradeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GradeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GradeName2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGradeRequired")
                        .HasColumnType("bit");

                    b.Property<int?>("NoOfGrades")
                        .HasColumnType("int");

                    b.HasKey("GradeCode");

                    b.ToTable("tblSysSchoolAcedemicClassGrade");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSysSchoolBranches", b =>
                {
                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchNameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchNotification_Moderator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchPrefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("Default_InTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("Default_OutTime")
                        .HasColumnType("time");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndAcademicDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FinBranch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GeoLat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GeoLong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NextFeeVoucherNum")
                        .HasColumnType("int");

                    b.Property<int?>("NextStuNum")
                        .HasColumnType("int");

                    b.Property<string>("NumberOfWeekDays")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrivacyPolicyUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartAcademicDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StartWeekDay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeekOff1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeekOff2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BranchCode");

                    b.ToTable("tblSysSchoolBranches");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSysSchoolBranchesAuthority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BranchCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsApproveDisciPlinaryAction")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproveEvent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproveLeave")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproveNotification")
                        .HasColumnType("bit");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("TeacherCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("tblSysSchoolBranchesAuthority");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSysSchoolExaminationTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExaminationTypeName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ExaminationTypeName2")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("TypeOfExaminationCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("tblSysSchoolExaminationTypes");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSysSchoolFeeStructureDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("ActualFeeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FeeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FeeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FeeStructCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("MaxDiscPer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TermCode")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("FeeCode");

                    b.HasIndex("FeeStructCode");

                    b.HasIndex("TermCode");

                    b.ToTable("tblSysSchoolFeeStructureDetails");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSysSchoolFeeStructureHeader", b =>
                {
                    b.Property<string>("FeeStructCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("ActualFeePayable")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("ApplyLateFee")
                        .HasColumnType("bit");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeeStructName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeeStructName2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GradeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LateFeeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FeeStructCode");

                    b.HasIndex("BranchCode");

                    b.HasIndex("GradeCode");

                    b.HasIndex("LateFeeCode");

                    b.ToTable("tblSysSchoolFeeStructureHeader");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSysSchoolFeeTerms", b =>
                {
                    b.Property<string>("TermCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FeeDueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TermEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TermName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TermName2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TermStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TermCode");

                    b.ToTable("tblSysSchoolFeeTerms");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSysSchoolFeeType", b =>
                {
                    b.Property<string>("FeeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("EstFeeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FeeGLAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeeName2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeeTaxAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeesName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Frequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("IsDiscountable")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MaxDiscPer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MaxFeeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinFeeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TaxApplicable")
                        .HasColumnType("bit");

                    b.Property<string>("TaxCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FeeCode");

                    b.ToTable("tblSysSchoolFeeType");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSysSchoolGender", b =>
                {
                    b.Property<string>("GenderCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenderName2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("GenderCode");

                    b.ToTable("tblSysSchoolGender");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSysSchoolGradeSectionMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("AvgStrength")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GradeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MaxStrength")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinStrength")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SectionCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblSysSchoolGradeSectionMapping");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSysSchoolGradeSubjectMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("GradeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("MaximumMarks")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("QualifyingMarks")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SemisterCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCodes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblSysSchoolGradeSubjectMapping");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSysSchoolHolidayCalanderStudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BranchCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("HDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HName2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblSysSchoolHolidayCalanderStudent");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSysSchoolLanguages", b =>
                {
                    b.Property<string>("LangCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LangName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LangName2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LangCode");

                    b.ToTable("tblSysSchoolLanguages");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSysSchoolNationality", b =>
                {
                    b.Property<string>("NatCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("NatName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatName2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NatCode");

                    b.ToTable("tblSysSchoolNationality");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSysSchoolNews", b =>
                {
                    b.Property<int>("NewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("ApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Headlines")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Headlines_Ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("NewTumbnailImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NewsDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewsDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Topic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Topic_Ar")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NewId");

                    b.ToTable("tblSysSchoolNews");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSysSchoolNewsMediaLib", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MediaNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MediaType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mediapath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NewId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NewId");

                    b.ToTable("tblSysSchoolNewsMediaLib");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSysSchoolNotificationFilters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BranchCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("GenderCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("GradeCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NationalityCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("NotificationId")
                        .HasColumnType("int");

                    b.Property<string>("PTGroupCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PickUpAndDropZone")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SectionCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("tblSysSchoolNotificationFilters");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSysSchoolNotifications", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AcadamicYear")
                        .HasMaxLength(200)
                        .HasColumnType("int");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotificationMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotificationMessage_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotificationTitle")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("NotificationTitle_Ar")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("NotificationType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tblSysSchoolNotifications");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSysSchoolPETCategory", b =>
                {
                    b.Property<string>("PETCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PETName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PETName2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PETCode");

                    b.ToTable("tblSysSchoolPETCategory");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSysSchoolPayTypes", b =>
                {
                    b.Property<string>("PayCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("AllowOtherBranchUse")
                        .HasColumnType("bit");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("GLAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PaName2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PayCode");

                    b.ToTable("tblSysSchoolPayTypes");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSysSchoolPushNotificationParent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FromName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<int>("MsgNoteId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NotifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NotifyMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotifyMessage_Ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotifyTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReadDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegisteredMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title_Ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblSysSchoolPushNotificationParent");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSysSchoolReligion", b =>
                {
                    b.Property<string>("RegCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RegName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegName2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RegCode");

                    b.ToTable("tblSysSchoolReligion");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSysSchoolSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("Day1In")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("Day1Out")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("Day2In")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("Day2Out")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("Day3In")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("Day3Out")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("Day4In")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("Day4Out")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("Day5In")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("Day5Out")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("Day6In")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("Day6Out")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("Day7In")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("Day7Out")
                        .HasColumnType("time");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ScheduleCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("tblSysSchoolSchedule");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSysSchoolSectionsSection", b =>
                {
                    b.Property<string>("SectionCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("SectionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SectionName2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SectionCode");

                    b.ToTable("tblSysSchoolSectionsSection");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSysSchoolSemister", b =>
                {
                    b.Property<string>("SemisterCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("SemisterEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SemisterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SemisterName2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SemisterStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SemisterCode");

                    b.ToTable("TblSysSchoolSemister");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSysSchoolStuLeaveType", b =>
                {
                    b.Property<string>("LeaveCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LeaveName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaveName2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxLeavePerReq")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LeaveCode");

                    b.ToTable("tblSysSchoolStuLeaveType");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblTranFeeTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AcademicYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdmissionNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DiscReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FeeDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FeeDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeeStructCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeeTerm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<string>("JvNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NetFeeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PaidDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PaidManual")
                        .HasColumnType("bit");

                    b.Property<bool>("PaidOnline")
                        .HasColumnType("bit");

                    b.Property<string>("PaidRemarks1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaidRemarks2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaidTransNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiptVoucher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceivedByUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TermCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotFeeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("tblTranFeeTransaction");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblWebStudentRegistration", b =>
                {
                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EnglishFluencyLevel")
                        .HasColumnType("int");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsyourchildPottytrained")
                        .HasColumnType("bit");

                    b.Property<string>("MotherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FullName");

                    b.ToTable("TblWebStudentRegistration");
                });

            modelBuilder.Entity("CIN.Domain.SndQuotationSetup.TblSndTranQuotation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<decimal?>("AmountBeforeTax")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("AmountDue")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CustArbName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CustName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<short>("FooterDiscount")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConvertedSndQuotationToDeliveryNote")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConvertedSndQuotationToInvoice")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConvertedSndQuotationToOrder")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDefaultConfig")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinalRevision")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRevised")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVoid")
                        .HasColumnType("bit");

                    b.Property<string>("LpoContract")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<long>("OriginalQuotationId")
                        .HasColumnType("bigint");

                    b.Property<string>("PaymentTermId")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("QuotationDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("QuotationDueDate")
                        .HasColumnType("date");

                    b.Property<string>("QuotationModule")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("QuotationNotes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("QuotationNumber")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("QuotationRefNumber")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("QuotationStatus")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<byte>("RevisedNumber")
                        .HasColumnType("tinyint");

                    b.Property<string>("ServiceDate1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SpQuotationNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TaxAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("TaxIdNumber")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TotalPayment")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("VatPercentage")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("WarehouseCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("PaymentTermId");

                    b.HasIndex("WarehouseCode");

                    b.ToTable("tblSndTranQuotation");
                });

            modelBuilder.Entity("CIN.Domain.SndQuotationSetup.TblSndTranQuotationItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<decimal?>("AmountBeforeTax")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<long?>("CreditMemoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DebitMemoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<short?>("Discount")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<bool?>("IsDefaultConfig")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("decimal(18,3)");

                    b.Property<long>("QuotationId")
                        .HasColumnType("bigint");

                    b.Property<string>("QuotationNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short?>("QuotationType")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TaxAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TaxTariffPercentage")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("UnitType")
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("ItemCode");

                    b.HasIndex("QuotationId");

                    b.HasIndex("UnitType");

                    b.ToTable("tblSndTranQuotationItem");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysAcCodeSegment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CodeType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("End")
                        .HasColumnType("smallint");

                    b.Property<short>("Len")
                        .HasColumnType("smallint");

                    b.Property<short>("Segment")
                        .HasColumnType("smallint");

                    b.Property<short>("Start")
                        .HasColumnType("smallint");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tblErpSysAcCodeSegment");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysCityCode", b =>
                {
                    b.Property<string>("CityCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CityNameAr")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("StateCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CityCode");

                    b.HasIndex("StateCode");

                    b.ToTable("tblErpSysCityCode");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CcNumber")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("City")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CompanyAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CompanyAddressAr")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CompanyNameAr")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CrNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DateFormat")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GeoLocLatitude")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("GeoLocLongitude")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("LogoImagePath")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LogoURL")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PriceDecimal")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("QuantityDecimal")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("State")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VATNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Website")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("tblErpSysCompany");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", b =>
                {
                    b.Property<string>("BranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("AuthorityName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BankName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("BankNameAr")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("BranchAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("BranchAddressAr")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("BranchName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("City")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("GeoLocLatitude")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("GeoLocLongitude")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Iban")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Mobile")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("State")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("BranchCode");

                    b.HasIndex("City");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ZoneId");

                    b.ToTable("tblErpSysCompanyBranches");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysCountryCode", b =>
                {
                    b.Property<string>("CountryCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("CountryCode");

                    b.ToTable("tblErpSysCountryCode");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysCurrencyCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("BuyingRate")
                        .HasColumnType("real");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("Lastupdated")
                        .HasColumnType("date");

                    b.Property<float>("SellingRate")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CountryCode");

                    b.ToTable("tblErpSysCurrencyCode");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysFileUpload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FileName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("SourceId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UploadedBy")
                        .HasMaxLength(124)
                        .HasColumnType("nvarchar(124)");

                    b.HasKey("Id");

                    b.ToTable("tblErpSysFileUpload");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysIncidentReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<decimal?>("SiteGeoLatitude")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("SiteGeoLongitude")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("tblErpSysIncidentReport");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysLogin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ImagePath")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLoginAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSigned")
                        .HasColumnType("bit");

                    b.Property<string>("LoginId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("LoginType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PrimaryBranch")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SwpireCardId")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserType")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("PrimaryBranch");

                    b.HasIndex(new[] { "UserName" }, "IX_tblErpSysLogin_UserName")
                        .IsUnique();

                    b.ToTable("tblErpSysLogin");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysMenuLoginId", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<bool>("IsAllowed")
                        .HasColumnType("bit");

                    b.Property<int>("LoginId")
                        .HasColumnType("int");

                    b.Property<string>("MenuCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("LoginId");

                    b.HasIndex("MenuCode");

                    b.ToTable("tblErpSysMenuLoginId");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysMenuOption", b =>
                {
                    b.Property<string>("MenuCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsForm")
                        .HasColumnType("bit");

                    b.Property<short>("Level1")
                        .HasColumnType("smallint");

                    b.Property<short>("Level2")
                        .HasColumnType("smallint");

                    b.Property<short>("Level3")
                        .HasColumnType("smallint");

                    b.Property<string>("MenuNameArb")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("MenuNameEng")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ModuleName")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Path")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("MenuCode");

                    b.ToTable("tblErpSysMenuOption");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysStateCode", b =>
                {
                    b.Property<string>("StateCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("StateCode");

                    b.HasIndex("CountryCode");

                    b.ToTable("tblErpSysStateCode");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysSystemTax", b =>
                {
                    b.Property<string>("TaxCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("InputAcCode01")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InputAcCode02")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InputAcCode03")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InputAcCode04")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InputAcCode05")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInterState")
                        .HasColumnType("bit");

                    b.Property<string>("OutputAcCode01")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OutputAcCode02")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OutputAcCode03")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OutputAcCode04")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OutputAcCode05")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TaxComponent01")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TaxComponent02")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TaxComponent03")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TaxComponent04")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TaxComponent05")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TaxName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Taxper01")
                        .HasColumnType("decimal(6,3)");

                    b.Property<decimal?>("Taxper02")
                        .HasColumnType("decimal(6,3)");

                    b.Property<decimal?>("Taxper03")
                        .HasColumnType("decimal(6,3)");

                    b.Property<decimal?>("Taxper04")
                        .HasColumnType("decimal(6,3)");

                    b.Property<decimal?>("Taxper05")
                        .HasColumnType("decimal(6,3)");

                    b.HasKey("TaxCode");

                    b.ToTable("tblErpSysSystemTaxes");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysTransactionCode", b =>
                {
                    b.Property<string>("TransactionCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.HasKey("TransactionCode");

                    b.ToTable("tblErpSysTransactionCodes");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysTransactionSequence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("LastSeqNum")
                        .HasColumnType("int");

                    b.Property<string>("PrefixCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("PrefixFinYear")
                        .HasColumnType("bit");

                    b.Property<bool>("ResetAfterFYClosing")
                        .HasColumnType("bit");

                    b.Property<string>("TransactionCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.HasIndex("TransactionCode");

                    b.ToTable("tblErpSysTransactionSequence");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysUserBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BranchCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LoginId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.HasIndex("LoginId");

                    b.ToTable("tblErpSysUserBranch");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysUserSiteMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<long?>("EmployeeID")
                        .HasColumnType("bigint");

                    b.Property<string>("LoginId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tblErpSysUserSiteMapping");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysUserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("UerType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UerType" }, "IX_tblErpSysUserType_UerType")
                        .IsUnique()
                        .HasFilter("[UerType] IS NOT NULL");

                    b.ToTable("tblErpSysUserType");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysZoneSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAR")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "IX_tblErpSysZoneSetting_Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("tblErpSysZoneSetting");
                });

            modelBuilder.Entity("CIN.Domain.TblSndDeliveryNoteHeader", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<decimal?>("AmountBeforeTax")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("AmountDue")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("ConvertedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ConvertedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CustArbName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CustName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("DeliveryNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<short>("FooterDiscount")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConvertedDeliveryNoteToInvoice")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConvertedFromQuotation")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCovertedFromOrder")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDefaultConfig")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVoid")
                        .HasColumnType("bit");

                    b.Property<string>("LpoContract")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<long>("OriginalQuotationId")
                        .HasColumnType("bigint");

                    b.Property<string>("PaymentTermId")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("QuotationDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("QuotationDueDate")
                        .HasColumnType("date");

                    b.Property<long>("QuotationHeadId")
                        .HasColumnType("bigint");

                    b.Property<string>("QuotationModule")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("QuotationNotes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("QuotationNumber")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("QuotationRefNumber")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("QuotationStatus")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<byte>("RevisedNumber")
                        .HasColumnType("tinyint");

                    b.Property<string>("ServiceDate1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SpQuotationNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TaxAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("TaxIdNumber")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TotalPayment")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("VatPercentage")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("WarehouseCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("PaymentTermId");

                    b.HasIndex("QuotationHeadId");

                    b.HasIndex("WarehouseCode");

                    b.ToTable("tblSndDeliveryNoteHeader");
                });

            modelBuilder.Entity("CIN.Domain.TblSndDeliveryNoteLine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<decimal?>("AmountBeforeTax")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("BackOrder")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<long?>("CreditMemoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DebitMemoId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Delivered")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Delivery")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("DeliveryNoteId")
                        .HasColumnType("bigint");

                    b.Property<bool>("DelvFlg1")
                        .HasColumnType("bit");

                    b.Property<bool>("DelvFlg2")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<short?>("Discount")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<bool?>("IsDefaultConfig")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("decimal(18,3)");

                    b.Property<long?>("QuotationId")
                        .HasColumnType("bigint");

                    b.Property<string>("QuotationNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short?>("QuotationType")
                        .HasColumnType("smallint");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TaxAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TaxTariffPercentage")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("UnitType")
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryNoteId");

                    b.HasIndex("ItemCode");

                    b.HasIndex("QuotationId");

                    b.HasIndex("UnitType");

                    b.ToTable("tblSndDeliveryNoteLine");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefAccountBranchMapping", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("FinBranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SysCompanyBranch");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefAccountBranches", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("FinBranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SysCompanyBranch");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefAccountCategory", b =>
                {
                    b.HasOne("CIN.Domain.FinanceMgt.TblFinSysAccountType", "FinAccountType")
                        .WithMany()
                        .HasForeignKey("FinType")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FinAccountType");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefAccountSubCategory", b =>
                {
                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefAccountCategory", "FinAccountCategory")
                        .WithMany()
                        .HasForeignKey("FinCatCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FinAccountCategory");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefAccountlPaycodes", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("FinBranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinIntMainAccounts")
                        .WithMany()
                        .HasForeignKey("FinPayAcIntgrAC")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinPdcMainAccounts")
                        .WithMany()
                        .HasForeignKey("FinPayPDCClearAC")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FinIntMainAccounts");

                    b.Navigation("FinPdcMainAccounts");

                    b.Navigation("SysCompanyBranch");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefBankCheckLeaves", b =>
                {
                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefAccountlPaycodes", "FinAccountlPaycodes")
                        .WithMany()
                        .HasForeignKey("FinPayCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FinAccountlPaycodes");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefBranchesAuthority", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("FinBranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SysCompanyBranch");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefBranchesMainAccounts", b =>
                {
                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinMainAccounts")
                        .WithMany()
                        .HasForeignKey("FinAcCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("FinBranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FinMainAccounts");

                    b.Navigation("SysCompanyBranch");
                });

            modelBuilder.Entity("CIN.Domain.FinanceMgt.TblFinDefCenters", b =>
                {
                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinMainAccounts")
                        .WithMany()
                        .HasForeignKey("FinCenterCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FinMainAccounts");
                });

            modelBuilder.Entity("CIN.Domain.FomMgt.TblErpFomActivities", b =>
                {
                    b.HasOne("CIN.Domain.FomMgt.TblErpFomDepartment", "ErpDeptCode")
                        .WithMany()
                        .HasForeignKey("DeptCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ErpDeptCode");
                });

            modelBuilder.Entity("CIN.Domain.FomMgt.TblErpFomResources", b =>
                {
                    b.HasOne("CIN.Domain.FomMgt.TblErpFomResourceType", "SysResType")
                        .WithMany()
                        .HasForeignKey("ResTypeCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SysResType");
                });

            modelBuilder.Entity("CIN.Domain.GeneralLedger.BankVoucher.TblFinTrnBankVoucher", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompany", "SysCompany")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SysCompany");

                    b.Navigation("SysCompanyBranch");
                });

            modelBuilder.Entity("CIN.Domain.GeneralLedger.BankVoucher.TblFinTrnBankVoucherApproval", b =>
                {
                    b.HasOne("CIN.Domain.GeneralLedger.BankVoucher.TblFinTrnBankVoucher", "Invoice")
                        .WithMany()
                        .HasForeignKey("BankVoucherId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompany", "SysCompany")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "SysLogin")
                        .WithMany()
                        .HasForeignKey("LoginId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("SysCompany");

                    b.Navigation("SysCompanyBranch");

                    b.Navigation("SysLogin");
                });

            modelBuilder.Entity("CIN.Domain.GeneralLedger.BankVoucher.TblFinTrnBankVoucherItem", b =>
                {
                    b.HasOne("CIN.Domain.GeneralLedger.BankVoucher.TblFinTrnBankVoucher", "BankVoucher")
                        .WithMany()
                        .HasForeignKey("BankVoucherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinDefMainAccounts")
                        .WithMany()
                        .HasForeignKey("FinAcCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BankVoucher");

                    b.Navigation("FinDefMainAccounts");

                    b.Navigation("SysCompanyBranch");
                });

            modelBuilder.Entity("CIN.Domain.GeneralLedger.BankVoucher.TblFinTrnBankVoucherStatement", b =>
                {
                    b.HasOne("CIN.Domain.GeneralLedger.BankVoucher.TblFinTrnBankVoucher", "BankVoucher")
                        .WithMany()
                        .HasForeignKey("BankVoucherId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "SysLogin")
                        .WithMany()
                        .HasForeignKey("LoginId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BankVoucher");

                    b.Navigation("SysLogin");
                });

            modelBuilder.Entity("CIN.Domain.GeneralLedger.CashVoucher.TblFinTrnCashVoucher", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompany", "SysCompany")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SysCompany");

                    b.Navigation("SysCompanyBranch");
                });

            modelBuilder.Entity("CIN.Domain.GeneralLedger.CashVoucher.TblFinTrnCashVoucherApproval", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.GeneralLedger.CashVoucher.TblFinTrnCashVoucher", "Invoice")
                        .WithMany()
                        .HasForeignKey("CashVoucherId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompany", "SysCompany")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "SysLogin")
                        .WithMany()
                        .HasForeignKey("LoginId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("SysCompany");

                    b.Navigation("SysCompanyBranch");

                    b.Navigation("SysLogin");
                });

            modelBuilder.Entity("CIN.Domain.GeneralLedger.CashVoucher.TblFinTrnCashVoucherItem", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.GeneralLedger.CashVoucher.TblFinTrnCashVoucher", "CashVoucher")
                        .WithMany()
                        .HasForeignKey("CashVoucherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinDefMainAccounts")
                        .WithMany()
                        .HasForeignKey("FinAcCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CashVoucher");

                    b.Navigation("FinDefMainAccounts");

                    b.Navigation("SysCompanyBranch");
                });

            modelBuilder.Entity("CIN.Domain.GeneralLedger.CashVoucher.TblFinTrnCashVoucherStatement", b =>
                {
                    b.HasOne("CIN.Domain.GeneralLedger.CashVoucher.TblFinTrnCashVoucher", "CashVoucher")
                        .WithMany()
                        .HasForeignKey("CashVoucherId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "SysLogin")
                        .WithMany()
                        .HasForeignKey("LoginId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CashVoucher");

                    b.Navigation("SysLogin");
                });

            modelBuilder.Entity("CIN.Domain.GeneralLedger.Distribution.TblFinTrnDistribution", b =>
                {
                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinDefMainAccounts")
                        .WithMany()
                        .HasForeignKey("FinAcCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FinDefMainAccounts");
                });

            modelBuilder.Entity("CIN.Domain.GeneralLedger.Ledger.TblFinTrnAccountsLedger", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SysCompanyBranch");
                });

            modelBuilder.Entity("CIN.Domain.GeneralLedger.TblFinTrnJournalVoucher", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompany", "SysCompany")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SysCompany");

                    b.Navigation("SysCompanyBranch");
                });

            modelBuilder.Entity("CIN.Domain.GeneralLedger.TblFinTrnJournalVoucherApproval", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompany", "SysCompany")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.GeneralLedger.TblFinTrnJournalVoucher", "Invoice")
                        .WithMany()
                        .HasForeignKey("JournalVoucherId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "SysLogin")
                        .WithMany()
                        .HasForeignKey("LoginId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("SysCompany");

                    b.Navigation("SysCompanyBranch");

                    b.Navigation("SysLogin");
                });

            modelBuilder.Entity("CIN.Domain.GeneralLedger.TblFinTrnJournalVoucherItem", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinDefMainAccounts")
                        .WithMany()
                        .HasForeignKey("FinAcCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.GeneralLedger.TblFinTrnJournalVoucher", "JournalVoucher")
                        .WithMany()
                        .HasForeignKey("JournalVoucherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FinDefMainAccounts");

                    b.Navigation("JournalVoucher");

                    b.Navigation("SysCompanyBranch");
                });

            modelBuilder.Entity("CIN.Domain.GeneralLedger.TblFinTrnJournalVoucherStatement", b =>
                {
                    b.HasOne("CIN.Domain.GeneralLedger.TblFinTrnJournalVoucher", "JournalVoucher")
                        .WithMany()
                        .HasForeignKey("JournalVoucherId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "SysLogin")
                        .WithMany()
                        .HasForeignKey("LoginId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("JournalVoucher");

                    b.Navigation("SysLogin");
                });

            modelBuilder.Entity("CIN.Domain.InventoryMgt.TblIMTransferTransactionHeader", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "BranchId")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BranchId");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblErpInvItemInventory", b =>
                {
                    b.HasOne("CIN.Domain.InventorySetup.TblErpInvItemMaster", "InvItemMaster")
                        .WithMany()
                        .HasForeignKey("ItemCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.InventorySetup.TblInvDefWarehouse", "InvWarehouses")
                        .WithMany()
                        .HasForeignKey("WHCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("InvItemMaster");

                    b.Navigation("InvWarehouses");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblErpInvItemInventoryHistory", b =>
                {
                    b.HasOne("CIN.Domain.InventorySetup.TblErpInvItemMaster", "InvItemMaster")
                        .WithMany()
                        .HasForeignKey("ItemCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.InventorySetup.TblInvDefWarehouse", "InvWarehouses")
                        .WithMany()
                        .HasForeignKey("WHCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("InvItemMaster");

                    b.Navigation("InvWarehouses");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblErpInvItemMaster", b =>
                {
                    b.HasOne("CIN.Domain.InventorySetup.TblInvDefUOM", "InvUoms")
                        .WithMany()
                        .HasForeignKey("ItemBaseUnit")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.InventorySetup.TblInvDefCategory", "InvCategory")
                        .WithMany()
                        .HasForeignKey("ItemCat")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.InventorySetup.TblInvDefClass", "InvClasses")
                        .WithMany()
                        .HasForeignKey("ItemClass")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.InventorySetup.TblInvDefSubCategory", "InvSubCategories")
                        .WithMany()
                        .HasForeignKey("ItemSubCat")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.InventorySetup.TblInvDefSubClass", "InvSubClasses")
                        .WithMany()
                        .HasForeignKey("ItemSubClass")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysSystemTax", "SystemTaxes")
                        .WithMany()
                        .HasForeignKey("ItemTaxCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("InvCategory");

                    b.Navigation("InvClasses");

                    b.Navigation("InvSubCategories");

                    b.Navigation("InvSubClasses");

                    b.Navigation("InvUoms");

                    b.Navigation("SystemTaxes");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblErpInvItemNotes", b =>
                {
                    b.HasOne("CIN.Domain.InventorySetup.TblErpInvItemMaster", "InvItemMaster")
                        .WithMany()
                        .HasForeignKey("ItemCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("InvItemMaster");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblErpInvItemsBarcode", b =>
                {
                    b.HasOne("CIN.Domain.InventorySetup.TblErpInvItemMaster", "InvItemMaster")
                        .WithMany()
                        .HasForeignKey("ItemCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.InventorySetup.TblInvDefUOM", "InvUoms")
                        .WithMany()
                        .HasForeignKey("ItemUOM")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("InvItemMaster");

                    b.Navigation("InvUoms");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblErpInvItemsUOM", b =>
                {
                    b.HasOne("CIN.Domain.InventorySetup.TblErpInvItemMaster", "InvItemMaster")
                        .WithMany()
                        .HasForeignKey("ItemCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.InventorySetup.TblInvDefUOM", "InvUoms")
                        .WithMany()
                        .HasForeignKey("ItemUOM")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("InvItemMaster");

                    b.Navigation("InvUoms");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblInvDefDistributionGroup", b =>
                {
                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinInvAdjAcMainAccounts")
                        .WithMany()
                        .HasForeignKey("InvAdjAc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinMainAccounts")
                        .WithMany()
                        .HasForeignKey("InvAssetAc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinInvCOGSAcMainAccounts")
                        .WithMany()
                        .HasForeignKey("InvCOGSAc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinInvCashPOACMainAccounts")
                        .WithMany()
                        .HasForeignKey("InvCashPOAC")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinInvCostCorAcMainAccounts")
                        .WithMany()
                        .HasForeignKey("InvCostCorAc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinInvDefaultAPAcMainAccounts")
                        .WithMany()
                        .HasForeignKey("InvDefaultAPAc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinInvInTransitAcMainAccounts")
                        .WithMany()
                        .HasForeignKey("InvInTransitAc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinInvNonAssetAcMainAccounts")
                        .WithMany()
                        .HasForeignKey("InvNonAssetAc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinInvSalesAcMainAccounts")
                        .WithMany()
                        .HasForeignKey("InvSalesAc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinInvWIPAcMainAccounts")
                        .WithMany()
                        .HasForeignKey("InvWIPAc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinInvWriteOffAcMainAccounts")
                        .WithMany()
                        .HasForeignKey("InvWriteOffAc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FinInvAdjAcMainAccounts");

                    b.Navigation("FinInvCashPOACMainAccounts");

                    b.Navigation("FinInvCOGSAcMainAccounts");

                    b.Navigation("FinInvCostCorAcMainAccounts");

                    b.Navigation("FinInvDefaultAPAcMainAccounts");

                    b.Navigation("FinInvInTransitAcMainAccounts");

                    b.Navigation("FinInvNonAssetAcMainAccounts");

                    b.Navigation("FinInvSalesAcMainAccounts");

                    b.Navigation("FinInvWIPAcMainAccounts");

                    b.Navigation("FinInvWriteOffAcMainAccounts");

                    b.Navigation("FinMainAccounts");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblInvDefInventoryConfig", b =>
                {
                    b.HasOne("CIN.Domain.InventorySetup.TblInvDefWarehouse", "InvWarehouse")
                        .WithMany()
                        .HasForeignKey("CentralWHCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("InvWarehouse");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblInvDefSubCategory", b =>
                {
                    b.HasOne("CIN.Domain.InventorySetup.TblInvDefCategory", "InvCategory")
                        .WithMany()
                        .HasForeignKey("ItemCatCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("InvCategory");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblInvDefWarehouse", b =>
                {
                    b.HasOne("CIN.Domain.InventorySetup.TblInvDefDistributionGroup", "InvDistributionGroup")
                        .WithMany()
                        .HasForeignKey("InvDistGroup")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("WHBranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("InvDistributionGroup");

                    b.Navigation("SysCompanyBranch");
                });

            modelBuilder.Entity("CIN.Domain.InventorySetup.TblInventoryDefDistributionGroup", b =>
                {
                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinInvAdjAcMainAccounts")
                        .WithMany()
                        .HasForeignKey("InvAdjAc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinMainAccounts")
                        .WithMany()
                        .HasForeignKey("InvAssetAc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinInvCOGSAcMainAccounts")
                        .WithMany()
                        .HasForeignKey("InvCOGSAc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinInvCashPOACMainAccounts")
                        .WithMany()
                        .HasForeignKey("InvCashPOAC")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinInvCostCorAcMainAccounts")
                        .WithMany()
                        .HasForeignKey("InvCostCorAc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinInvDefaultAPAcMainAccounts")
                        .WithMany()
                        .HasForeignKey("InvDefaultAPAc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinInvInTransitAcMainAccounts")
                        .WithMany()
                        .HasForeignKey("InvInTransitAc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinInvNonAssetAcMainAccounts")
                        .WithMany()
                        .HasForeignKey("InvNonAssetAc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinInvSalesAcMainAccounts")
                        .WithMany()
                        .HasForeignKey("InvSalesAc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinInvWIPAcMainAccounts")
                        .WithMany()
                        .HasForeignKey("InvWIPAc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "FinInvWriteOffAcMainAccounts")
                        .WithMany()
                        .HasForeignKey("InvWriteOffAc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FinInvAdjAcMainAccounts");

                    b.Navigation("FinInvCashPOACMainAccounts");

                    b.Navigation("FinInvCOGSAcMainAccounts");

                    b.Navigation("FinInvCostCorAcMainAccounts");

                    b.Navigation("FinInvDefaultAPAcMainAccounts");

                    b.Navigation("FinInvInTransitAcMainAccounts");

                    b.Navigation("FinInvNonAssetAcMainAccounts");

                    b.Navigation("FinInvSalesAcMainAccounts");

                    b.Navigation("FinInvWIPAcMainAccounts");

                    b.Navigation("FinInvWriteOffAcMainAccounts");

                    b.Navigation("FinMainAccounts");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblFinTrnAdvanceWallet", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompany", "SysCompany")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefCustomerMaster", "SndCustomerMaster")
                        .WithMany()
                        .HasForeignKey("CustCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SndCustomerMaster");

                    b.Navigation("SysCompany");

                    b.Navigation("SysCompanyBranch");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblFinTrnCustomerApproval", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompany", "SysCompany")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefCustomerMaster", "SndCustomerMaster")
                        .WithMany()
                        .HasForeignKey("CustCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.InvoiceSetup.TblTranInvoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "SysLogin")
                        .WithMany()
                        .HasForeignKey("LoginId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("SndCustomerMaster");

                    b.Navigation("SysCompany");

                    b.Navigation("SysCompanyBranch");

                    b.Navigation("SysLogin");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblFinTrnCustomerInvoice", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompany", "SysCompany")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefCustomerMaster", "SndCustomerMaster")
                        .WithMany()
                        .HasForeignKey("CustCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.InvoiceSetup.TblTranInvoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "SysLogin")
                        .WithMany()
                        .HasForeignKey("LoginId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("SndCustomerMaster");

                    b.Navigation("SysCompany");

                    b.Navigation("SysCompanyBranch");

                    b.Navigation("SysLogin");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblFinTrnCustomerPayment", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompany", "SysCompany")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefCustomerMaster", "SndCustomerMaster")
                        .WithMany()
                        .HasForeignKey("CustCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SndCustomerMaster");

                    b.Navigation("SysCompany");

                    b.Navigation("SysCompanyBranch");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblFinTrnCustomerStatement", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompany", "SysCompany")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefCustomerMaster", "SndCustomerMaster")
                        .WithMany()
                        .HasForeignKey("CustCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.InvoiceSetup.TblTranInvoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "SysLogin")
                        .WithMany()
                        .HasForeignKey("LoginId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("SndCustomerMaster");

                    b.Navigation("SysCompany");

                    b.Navigation("SysCompanyBranch");

                    b.Navigation("SysLogin");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblFinTrnOpmCustomerPayment", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefCustomerMaster", "SndCustomerMaster")
                        .WithMany()
                        .HasForeignKey("CustCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.InvoiceSetup.TblTranInvoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.InvoiceSetup.TblFinTrnOpmCustomerPaymentHeader", "OpmPaymentHeader")
                        .WithMany()
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("OpmPaymentHeader");

                    b.Navigation("SndCustomerMaster");

                    b.Navigation("SysCompanyBranch");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblFinTrnOpmCustomerPaymentHeader", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompany", "SysCompany")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefCustomerMaster", "SndCustomerMaster")
                        .WithMany()
                        .HasForeignKey("CustCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SndCustomerMaster");

                    b.Navigation("SysCompany");

                    b.Navigation("SysCompanyBranch");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblFinTrnOpmVendorPayment", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.InvoiceSetup.TblTranVenInvoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.InvoiceSetup.TblFinTrnOpmVendorPaymentHeader", "OpmPaymentHeader")
                        .WithMany()
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefVendorMaster", "SndVendorMaster")
                        .WithMany()
                        .HasForeignKey("VendCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Invoice");

                    b.Navigation("OpmPaymentHeader");

                    b.Navigation("SndVendorMaster");

                    b.Navigation("SysCompanyBranch");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblFinTrnOpmVendorPaymentHeader", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompany", "SysCompany")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefVendorMaster", "SndVendorMaster")
                        .WithMany()
                        .HasForeignKey("VendCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SndVendorMaster");

                    b.Navigation("SysCompany");

                    b.Navigation("SysCompanyBranch");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblFinTrnVendorApproval", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompany", "SysCompany")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.InvoiceSetup.TblTranVenInvoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "SysLogin")
                        .WithMany()
                        .HasForeignKey("LoginId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefVendorMaster", "SndVendorMaster")
                        .WithMany()
                        .HasForeignKey("VendCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Invoice");

                    b.Navigation("SndVendorMaster");

                    b.Navigation("SysCompany");

                    b.Navigation("SysCompanyBranch");

                    b.Navigation("SysLogin");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblFinTrnVendorInvoice", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompany", "SysCompany")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.InvoiceSetup.TblTranVenInvoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "SysLogin")
                        .WithMany()
                        .HasForeignKey("LoginId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefVendorMaster", "SndVendorMaster")
                        .WithMany()
                        .HasForeignKey("VendCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Invoice");

                    b.Navigation("SndVendorMaster");

                    b.Navigation("SysCompany");

                    b.Navigation("SysCompanyBranch");

                    b.Navigation("SysLogin");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblFinTrnVendorPayment", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompany", "SysCompany")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefVendorMaster", "SndVendorMaster")
                        .WithMany()
                        .HasForeignKey("VendCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SndVendorMaster");

                    b.Navigation("SysCompany");

                    b.Navigation("SysCompanyBranch");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblFinTrnVendorStatement", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompany", "SysCompany")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.InvoiceSetup.TblTranVenInvoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "SysLogin")
                        .WithMany()
                        .HasForeignKey("LoginId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefVendorMaster", "SndVendorMaster")
                        .WithMany()
                        .HasForeignKey("VendCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Invoice");

                    b.Navigation("SndVendorMaster");

                    b.Navigation("SysCompany");

                    b.Navigation("SysCompanyBranch");

                    b.Navigation("SysLogin");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblSndTranInvoice", b =>
                {
                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefCustomerMaster", "SysCustomer")
                        .WithMany()
                        .HasForeignKey("CustomerCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SalesSetup.TblSndDefSalesTermsCode", "SndSalesTermsCode")
                        .WithMany()
                        .HasForeignKey("PaymentTermId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.InventorySetup.TblInvDefWarehouse", "SysWarehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SndSalesTermsCode");

                    b.Navigation("SysCustomer");

                    b.Navigation("SysWarehouse");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblSndTranInvoiceItem", b =>
                {
                    b.HasOne("CIN.Domain.InvoiceSetup.TblSndTranInvoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.InventorySetup.TblErpInvItemMaster", "Item")
                        .WithMany()
                        .HasForeignKey("ItemCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.InventorySetup.TblInvDefUOM", "SysUnitType")
                        .WithMany()
                        .HasForeignKey("UnitType")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Invoice");

                    b.Navigation("Item");

                    b.Navigation("SysUnitType");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblSndTranInvoicePaymentSettlements", b =>
                {
                    b.HasOne("CIN.Domain.InvoiceSetup.TblSndTranInvoice", "TblSndTranInvoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefAccountlPaycodes", "TblFinDefAccountlPaycodes")
                        .WithMany()
                        .HasForeignKey("PaymentCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("TblFinDefAccountlPaycodes");

                    b.Navigation("TblSndTranInvoice");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblTranDefProduct", b =>
                {
                    b.HasOne("CIN.Domain.InvoiceSetup.TblTranDefProductType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.InvoiceSetup.TblTranDefUnitType", "UnitType")
                        .WithMany()
                        .HasForeignKey("UnitTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ProductType");

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblTranInvoice", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SalesSetup.TblSndDefSalesTermsCode", "SndSalesTermsCode")
                        .WithMany()
                        .HasForeignKey("PaymentTerms")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SndSalesTermsCode");

                    b.Navigation("SysCompanyBranch");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblTranInvoiceItem", b =>
                {
                    b.HasOne("CIN.Domain.InvoiceSetup.TblTranInvoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblTranVenInvoice", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.PurchaseSetup.TblPopDefVendorPOTermsCode", "SndPoTermsCode")
                        .WithMany()
                        .HasForeignKey("PaymentTerms")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SndPoTermsCode");

                    b.Navigation("SysCompanyBranch");
                });

            modelBuilder.Entity("CIN.Domain.InvoiceSetup.TblTranVenInvoiceItem", b =>
                {
                    b.HasOne("CIN.Domain.InvoiceSetup.TblTranVenInvoice", "Credit")
                        .WithMany()
                        .HasForeignKey("CreditId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Credit");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpContractClausesToContractFormMap", b =>
                {
                    b.HasOne("CIN.Domain.OpeartionsMgt.TblOpContractFormHead", "SysContractFormId")
                        .WithMany()
                        .HasForeignKey("ContractFormId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SysContractFormId");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpContractTemplateToContractClauseMap", b =>
                {
                    b.HasOne("CIN.Domain.OpeartionsMgt.TblOpContractClause", "SysContractClauseId")
                        .WithMany()
                        .HasForeignKey("ContractClauseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.OpeartionsMgt.TblOpContractTemplate", "SysTemplateId")
                        .WithMany()
                        .HasForeignKey("ContractTemplateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SysContractClauseId");

                    b.Navigation("SysTemplateId");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpCustomerComplaint", b =>
                {
                    b.HasOne("CIN.Domain.OpeartionsMgt.TblOpReasonCode", "SysReasonCode")
                        .WithMany()
                        .HasForeignKey("ReasonCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SysReasonCode");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOpCustomerVisitForm", b =>
                {
                    b.HasOne("CIN.Domain.OpeartionsMgt.TblOpReasonCode", "SysReasonCode")
                        .WithMany()
                        .HasForeignKey("ReasonCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "SysSuperviserId")
                        .WithMany()
                        .HasForeignKey("SupervisorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SysReasonCode");

                    b.Navigation("SysSuperviserId");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblOprTrnApprovals", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SysCompanyBranch");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblSndDefCustomerMaster", b =>
                {
                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "CustARAcMA")
                        .WithMany()
                        .HasForeignKey("CustARAc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "sysCustARAdjAcCode")
                        .WithMany()
                        .HasForeignKey("CustARAdjAcCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "sysCustARDiscAcCode")
                        .WithMany()
                        .HasForeignKey("CustARDiscAcCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "sysCustArAcCode")
                        .WithMany()
                        .HasForeignKey("CustArAcCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.SalesSetup.TblSndDefCustomerCategory", "SndDefCustomerCategory")
                        .WithMany()
                        .HasForeignKey("CustCatCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCityCode", "sysCityCode1")
                        .WithMany()
                        .HasForeignKey("CustCityCode1")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCityCode", "sysCityCode2")
                        .WithMany()
                        .HasForeignKey("CustCityCode2")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "sysCustDefExpAcCode")
                        .WithMany()
                        .HasForeignKey("CustDefExpAcCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.SalesSetup.TblSndDefSalesTermsCode", "SndDefSalestermsCode")
                        .WithMany()
                        .HasForeignKey("SalesTermsCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CustARAcMA");

                    b.Navigation("SndDefCustomerCategory");

                    b.Navigation("SndDefSalestermsCode");

                    b.Navigation("sysCityCode1");

                    b.Navigation("sysCityCode2");

                    b.Navigation("sysCustArAcCode");

                    b.Navigation("sysCustARAdjAcCode");

                    b.Navigation("sysCustARDiscAcCode");

                    b.Navigation("sysCustDefExpAcCode");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblSndDefServiceEnquiries", b =>
                {
                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefServiceEnquiryHeader", "SysEnquiryNumber")
                        .WithMany()
                        .HasForeignKey("EnquiryNumber")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefServiceMaster", "SysServiceCode")
                        .WithMany()
                        .HasForeignKey("ServiceCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefSiteMaster", "SysSiteCode")
                        .WithMany()
                        .HasForeignKey("SiteCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefUnitMaster", "SysUnitCode")
                        .WithMany()
                        .HasForeignKey("UnitCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SysEnquiryNumber");

                    b.Navigation("SysServiceCode");

                    b.Navigation("SysSiteCode");

                    b.Navigation("SysUnitCode");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblSndDefServiceEnquiryHeader", b =>
                {
                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefCustomerMaster", "SysCustCode")
                        .WithMany()
                        .HasForeignKey("CustomerCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SysCustCode");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblSndDefServiceMaster", b =>
                {
                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefSurveyFormHead", "SysSurveyFormCode")
                        .WithMany()
                        .HasForeignKey("SurveyFormCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SysSurveyFormCode");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblSndDefServiceUnitMap", b =>
                {
                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefServiceMaster", "SysServiceCode")
                        .WithMany()
                        .HasForeignKey("ServiceCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefUnitMaster", "SysUnitCode")
                        .WithMany()
                        .HasForeignKey("UnitCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SysServiceCode");

                    b.Navigation("SysUnitCode");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblSndDefSiteMaster", b =>
                {
                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefCustomerMaster", "SysCustomerCode")
                        .WithMany()
                        .HasForeignKey("CustomerCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCityCode", "SysSiteCityCode")
                        .WithMany()
                        .HasForeignKey("SiteCityCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SysCustomerCode");

                    b.Navigation("SysSiteCityCode");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblSndDefSurveyFormDataEntry", b =>
                {
                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefServiceEnquiries", "SysEnqId")
                        .WithMany()
                        .HasForeignKey("EnquiryID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SysEnqId");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblSndDefSurveyFormElementsMapp", b =>
                {
                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefSurveyFormElement", "SysFormElementCode")
                        .WithMany()
                        .HasForeignKey("FormElementCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefSurveyFormHead", "SysSurveyFormCode")
                        .WithMany()
                        .HasForeignKey("SurveyFormCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SysFormElementCode");

                    b.Navigation("SysSurveyFormCode");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblSndDefSurveyor", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysBranch")
                        .WithMany()
                        .HasForeignKey("Branch")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SysBranch");
                });

            modelBuilder.Entity("CIN.Domain.OpeartionsMgt.TblSndDefVendorMaster", b =>
                {
                    b.HasOne("CIN.Domain.PurchaseSetup.TblPopDefVendorPOTermsCode", "PopDefVendorPOTerms")
                        .WithMany()
                        .HasForeignKey("PoTermsCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "VendARAcMA")
                        .WithMany()
                        .HasForeignKey("VendARAc")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "sysVendARAdjAcCode")
                        .WithMany()
                        .HasForeignKey("VendARAdjAcCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "sysVendARDiscAcCode")
                        .WithMany()
                        .HasForeignKey("VendARDiscAcCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "sysVendArAcCode")
                        .WithMany()
                        .HasForeignKey("VendArAcCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.PurchaseSetup.TblPopDefVendorCategory", "SndDefVendorCategory")
                        .WithMany()
                        .HasForeignKey("VendCatCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCityCode", "sysCityCode1")
                        .WithMany()
                        .HasForeignKey("VendCityCode1")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCityCode", "sysCityCode2")
                        .WithMany()
                        .HasForeignKey("VendCityCode2")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.FinanceMgt.TblFinDefMainAccounts", "sysVendDefExpAcCode")
                        .WithMany()
                        .HasForeignKey("VendDefExpAcCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PopDefVendorPOTerms");

                    b.Navigation("SndDefVendorCategory");

                    b.Navigation("sysCityCode1");

                    b.Navigation("sysCityCode2");

                    b.Navigation("sysVendArAcCode");

                    b.Navigation("sysVendARAdjAcCode");

                    b.Navigation("sysVendARDiscAcCode");

                    b.Navigation("sysVendDefExpAcCode");

                    b.Navigation("VendARAcMA");
                });

            modelBuilder.Entity("CIN.Domain.PurchaseMgt.TblPopTrnGRNDetails", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "BranchId")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompany", "SysCompany")
                        .WithMany()
                        .HasForeignKey("CompCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.PurchaseMgt.TblPopTrnPurchaseOrderHeader", "Trans")
                        .WithMany()
                        .HasForeignKey("TranId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.InventorySetup.TblErpInvItemMaster", "InvItemMaster")
                        .WithMany()
                        .HasForeignKey("TranItemCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.InventorySetup.TblInvDefUOM", "InvUoms")
                        .WithMany()
                        .HasForeignKey("TranItemUnitCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefVendorMaster", "VendorTrans")
                        .WithMany()
                        .HasForeignKey("TranVendorCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefVendorMaster", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BranchId");

                    b.Navigation("InvItemMaster");

                    b.Navigation("InvUoms");

                    b.Navigation("SysCompany");

                    b.Navigation("Trans");

                    b.Navigation("Vendor");

                    b.Navigation("VendorTrans");
                });

            modelBuilder.Entity("CIN.Domain.PurchaseMgt.TblPopTrnGRNHeader", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "BranchId")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "ClosedByUser")
                        .WithMany()
                        .HasForeignKey("ClosedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompany", "SysCompany")
                        .WithMany()
                        .HasForeignKey("CompCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.PurchaseSetup.TblPopDefVendorPOTermsCode", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "TranCreateUserID")
                        .WithMany()
                        .HasForeignKey("TranCreateUser")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCurrencyCode", "TranCurrencyCodeCurrency")
                        .WithMany()
                        .HasForeignKey("TranCurrencyCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "TranLastEditUserID")
                        .WithMany()
                        .HasForeignKey("TranLastEditUser")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.PurchaseSetup.TblPopDefVendorShipment", "TranShipModeShipment")
                        .WithMany()
                        .HasForeignKey("TranShipMode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "TranpostUserID")
                        .WithMany()
                        .HasForeignKey("TranpostUser")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "TranvoidDateUser")
                        .WithMany()
                        .HasForeignKey("TranvoidDate")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefVendorMaster", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BranchId");

                    b.Navigation("ClosedByUser");

                    b.Navigation("Payment");

                    b.Navigation("SysCompany");

                    b.Navigation("TranCreateUserID");

                    b.Navigation("TranCurrencyCodeCurrency");

                    b.Navigation("TranLastEditUserID");

                    b.Navigation("TranpostUserID");

                    b.Navigation("TranShipModeShipment");

                    b.Navigation("TranvoidDateUser");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("CIN.Domain.PurchaseMgt.TblPopTrnPurchaseOrderDetails", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "BranchId")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompany", "SysCompany")
                        .WithMany()
                        .HasForeignKey("CompCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.PurchaseMgt.TblPopTrnPurchaseOrderHeader", "Trans")
                        .WithMany()
                        .HasForeignKey("TranId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.InventorySetup.TblErpInvItemMaster", "InvItemMaster")
                        .WithMany()
                        .HasForeignKey("TranItemCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.InventorySetup.TblInvDefUOM", "InvUoms")
                        .WithMany()
                        .HasForeignKey("TranItemUnitCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefVendorMaster", "VendorTrans")
                        .WithMany()
                        .HasForeignKey("TranVendorCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefVendorMaster", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BranchId");

                    b.Navigation("InvItemMaster");

                    b.Navigation("InvUoms");

                    b.Navigation("SysCompany");

                    b.Navigation("Trans");

                    b.Navigation("Vendor");

                    b.Navigation("VendorTrans");
                });

            modelBuilder.Entity("CIN.Domain.PurchaseMgt.TblPopTrnPurchaseOrderHeader", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "BranchId")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "ClosedByUser")
                        .WithMany()
                        .HasForeignKey("ClosedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompany", "SysCompany")
                        .WithMany()
                        .HasForeignKey("CompCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.PurchaseSetup.TblPopDefVendorPOTermsCode", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "TranCreateUserID")
                        .WithMany()
                        .HasForeignKey("TranCreateUser")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCurrencyCode", "TranCurrencyCodeCurrency")
                        .WithMany()
                        .HasForeignKey("TranCurrencyCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "TranLastEditUserID")
                        .WithMany()
                        .HasForeignKey("TranLastEditUser")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.PurchaseSetup.TblPopDefVendorShipment", "TranShipModeShipment")
                        .WithMany()
                        .HasForeignKey("TranShipMode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "TranpostUserID")
                        .WithMany()
                        .HasForeignKey("TranpostUser")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "TranvoidDateUser")
                        .WithMany()
                        .HasForeignKey("TranvoidDate")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefVendorMaster", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BranchId");

                    b.Navigation("ClosedByUser");

                    b.Navigation("Payment");

                    b.Navigation("SysCompany");

                    b.Navigation("TranCreateUserID");

                    b.Navigation("TranCurrencyCodeCurrency");

                    b.Navigation("TranLastEditUserID");

                    b.Navigation("TranpostUserID");

                    b.Navigation("TranShipModeShipment");

                    b.Navigation("TranvoidDateUser");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("CIN.Domain.PurchaseMgt.TblPopTrnPurchaseReturnDetails", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "BranchId")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompany", "SysCompany")
                        .WithMany()
                        .HasForeignKey("CompCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.PurchaseMgt.TblPopTrnPurchaseReturnHeader", "Trans")
                        .WithMany()
                        .HasForeignKey("TranId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.InventorySetup.TblErpInvItemMaster", "InvItemMaster")
                        .WithMany()
                        .HasForeignKey("TranItemCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.InventorySetup.TblInvDefUOM", "InvUoms")
                        .WithMany()
                        .HasForeignKey("TranItemUnitCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefVendorMaster", "VendorTrans")
                        .WithMany()
                        .HasForeignKey("TranVendorCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefVendorMaster", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BranchId");

                    b.Navigation("InvItemMaster");

                    b.Navigation("InvUoms");

                    b.Navigation("SysCompany");

                    b.Navigation("Trans");

                    b.Navigation("Vendor");

                    b.Navigation("VendorTrans");
                });

            modelBuilder.Entity("CIN.Domain.PurchaseMgt.TblPopTrnPurchaseReturnHeader", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "BranchId")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "ClosedByUser")
                        .WithMany()
                        .HasForeignKey("ClosedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompany", "SysCompany")
                        .WithMany()
                        .HasForeignKey("CompCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.PurchaseSetup.TblPopDefVendorPOTermsCode", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "TranCreateUserID")
                        .WithMany()
                        .HasForeignKey("TranCreateUser")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCurrencyCode", "TranCurrencyCodeCurrency")
                        .WithMany()
                        .HasForeignKey("TranCurrencyCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "TranLastEditUserID")
                        .WithMany()
                        .HasForeignKey("TranLastEditUser")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.PurchaseSetup.TblPopDefVendorShipment", "TranShipModeShipment")
                        .WithMany()
                        .HasForeignKey("TranShipMode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "TranpostUserID")
                        .WithMany()
                        .HasForeignKey("TranpostUser")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "TranvoidDateUser")
                        .WithMany()
                        .HasForeignKey("TranvoidDate")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.OpeartionsMgt.TblSndDefVendorMaster", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BranchId");

                    b.Navigation("ClosedByUser");

                    b.Navigation("Payment");

                    b.Navigation("SysCompany");

                    b.Navigation("TranCreateUserID");

                    b.Navigation("TranCurrencyCodeCurrency");

                    b.Navigation("TranLastEditUserID");

                    b.Navigation("TranpostUserID");

                    b.Navigation("TranShipModeShipment");

                    b.Navigation("TranvoidDateUser");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("CIN.Domain.PurchaseMgt.TblPurTrnApprovals", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SysCompanyBranch");
                });

            modelBuilder.Entity("CIN.Domain.PurchaseMgt.TblTranPurcInvoice", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.PurchaseSetup.TblPopDefVendorPOTermsCode", "SndPoTermsCode")
                        .WithMany()
                        .HasForeignKey("PaymentTerms")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SndPoTermsCode");

                    b.Navigation("SysCompanyBranch");
                });

            modelBuilder.Entity("CIN.Domain.PurchaseMgt.TblTranPurcInvoiceItem", b =>
                {
                    b.HasOne("CIN.Domain.PurchaseMgt.TblTranPurcInvoice", "Credit")
                        .WithMany()
                        .HasForeignKey("CreditId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.InventorySetup.TblErpInvItemMaster", "InvItemMaster")
                        .WithMany()
                        .HasForeignKey("ItemCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Credit");

                    b.Navigation("InvItemMaster");
                });

            modelBuilder.Entity("CIN.Domain.SND.TblSndAuthorities", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "SysLogin")
                        .WithMany()
                        .HasForeignKey("AppAuth")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SysCompanyBranch");

                    b.Navigation("SysLogin");
                });

            modelBuilder.Entity("CIN.Domain.SND.TblSndTrnApprovals", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "SysLogin")
                        .WithMany()
                        .HasForeignKey("AppAuth")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SysCompanyBranch");

                    b.Navigation("SysLogin");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSchoolTranInvoice", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SalesSetup.TblSndDefSalesTermsCode", "SndSalesTermsCode")
                        .WithMany()
                        .HasForeignKey("PaymentTerms")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SndSalesTermsCode");

                    b.Navigation("SysCompanyBranch");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSchoolTranInvoiceItem", b =>
                {
                    b.HasOne("CIN.Domain.SchoolMgt.TblSchoolTranInvoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSysSchoolFeeStructureDetails", b =>
                {
                    b.HasOne("CIN.Domain.SchoolMgt.TblSysSchoolFeeType", "SysSchoolFeeType")
                        .WithMany()
                        .HasForeignKey("FeeCode");

                    b.HasOne("CIN.Domain.SchoolMgt.TblSysSchoolFeeStructureHeader", "SchoolFeeStructureHeader")
                        .WithMany()
                        .HasForeignKey("FeeStructCode");

                    b.HasOne("CIN.Domain.SchoolMgt.TblSysSchoolFeeTerms", "SysSchoolFeeTerms")
                        .WithMany()
                        .HasForeignKey("TermCode");

                    b.Navigation("SchoolFeeStructureHeader");

                    b.Navigation("SysSchoolFeeTerms");

                    b.Navigation("SysSchoolFeeType");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSysSchoolFeeStructureHeader", b =>
                {
                    b.HasOne("CIN.Domain.SchoolMgt.TblSysSchoolBranches", "SysSchoolBranches")
                        .WithMany()
                        .HasForeignKey("BranchCode");

                    b.HasOne("CIN.Domain.SchoolMgt.TblSysSchoolAcedemicClassGrade", "SysSchoolAcedemicClassGrade")
                        .WithMany()
                        .HasForeignKey("GradeCode");

                    b.HasOne("CIN.Domain.SchoolMgt.TblSysSchoolFeeType", "SysSchoolFeeType")
                        .WithMany()
                        .HasForeignKey("LateFeeCode");

                    b.Navigation("SysSchoolAcedemicClassGrade");

                    b.Navigation("SysSchoolBranches");

                    b.Navigation("SysSchoolFeeType");
                });

            modelBuilder.Entity("CIN.Domain.SchoolMgt.TblSysSchoolNewsMediaLib", b =>
                {
                    b.HasOne("CIN.Domain.SchoolMgt.TblSysSchoolNews", "SysSchoolNews")
                        .WithMany()
                        .HasForeignKey("NewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SysSchoolNews");
                });

            modelBuilder.Entity("CIN.Domain.SndQuotationSetup.TblSndTranQuotation", b =>
                {
                    b.HasOne("CIN.Domain.SalesSetup.TblSndDefSalesTermsCode", "SndSalesTermsCode")
                        .WithMany()
                        .HasForeignKey("PaymentTermId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.InventorySetup.TblInvDefWarehouse", "SysWarehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SndSalesTermsCode");

                    b.Navigation("SysWarehouse");
                });

            modelBuilder.Entity("CIN.Domain.SndQuotationSetup.TblSndTranQuotationItem", b =>
                {
                    b.HasOne("CIN.Domain.InventorySetup.TblErpInvItemMaster", "Item")
                        .WithMany()
                        .HasForeignKey("ItemCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SndQuotationSetup.TblSndTranQuotation", "Quotation")
                        .WithMany()
                        .HasForeignKey("QuotationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.InventorySetup.TblInvDefUOM", "SysUnitType")
                        .WithMany()
                        .HasForeignKey("UnitType")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Item");

                    b.Navigation("Quotation");

                    b.Navigation("SysUnitType");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysCityCode", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysStateCode", "SysStateCode")
                        .WithMany()
                        .HasForeignKey("StateCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SysStateCode");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCityCode", "SysCityCode")
                        .WithMany()
                        .HasForeignKey("City")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompany", "SysCompany")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysZoneSetting", "ZoneSetting")
                        .WithMany()
                        .HasForeignKey("ZoneId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SysCityCode");

                    b.Navigation("SysCompany");

                    b.Navigation("ZoneSetting");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysCurrencyCode", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCountryCode", "SysCountryCode")
                        .WithMany()
                        .HasForeignKey("CountryCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SysCountryCode");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysLogin", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("PrimaryBranch")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SysCompanyBranch");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysMenuLoginId", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "SysLogin")
                        .WithMany()
                        .HasForeignKey("LoginId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysMenuOption", "SysMenuOption")
                        .WithMany()
                        .HasForeignKey("MenuCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SysLogin");

                    b.Navigation("SysMenuOption");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysStateCode", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCountryCode", "SysCountryCode")
                        .WithMany()
                        .HasForeignKey("CountryCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SysCountryCode");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysTransactionSequence", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysTransactionCode", "SysTransactionCode")
                        .WithMany()
                        .HasForeignKey("TransactionCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SysCompanyBranch");

                    b.Navigation("SysTransactionCode");
                });

            modelBuilder.Entity("CIN.Domain.SystemSetup.TblErpSysUserBranch", b =>
                {
                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysCompanyBranch", "SysCompanyBranch")
                        .WithMany()
                        .HasForeignKey("BranchCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SystemSetup.TblErpSysLogin", "SysLogin")
                        .WithMany()
                        .HasForeignKey("LoginId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SysCompanyBranch");

                    b.Navigation("SysLogin");
                });

            modelBuilder.Entity("CIN.Domain.TblSndDeliveryNoteHeader", b =>
                {
                    b.HasOne("CIN.Domain.SalesSetup.TblSndDefSalesTermsCode", "SndSalesTermsCode")
                        .WithMany()
                        .HasForeignKey("PaymentTermId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.SndQuotationSetup.TblSndTranQuotation", "SysQuotation")
                        .WithMany()
                        .HasForeignKey("QuotationHeadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.InventorySetup.TblInvDefWarehouse", "SysWarehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SndSalesTermsCode");

                    b.Navigation("SysQuotation");

                    b.Navigation("SysWarehouse");
                });

            modelBuilder.Entity("CIN.Domain.TblSndDeliveryNoteLine", b =>
                {
                    b.HasOne("CIN.Domain.TblSndDeliveryNoteHeader", "SysDeliveryNote")
                        .WithMany()
                        .HasForeignKey("DeliveryNoteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CIN.Domain.InventorySetup.TblErpInvItemMaster", "SysItem")
                        .WithMany()
                        .HasForeignKey("ItemCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.TblSndDeliveryNoteHeader", "Quotation")
                        .WithMany()
                        .HasForeignKey("QuotationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CIN.Domain.InventorySetup.TblInvDefUOM", "SysUnitType")
                        .WithMany()
                        .HasForeignKey("UnitType")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Quotation");

                    b.Navigation("SysDeliveryNote");

                    b.Navigation("SysItem");

                    b.Navigation("SysUnitType");
                });
#pragma warning restore 612, 618
        }
    }
}
